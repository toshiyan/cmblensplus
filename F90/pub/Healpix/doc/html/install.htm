<!DOCTYPE HTML>

<!--Converted with LaTeX2HTML 2020 (Released January 1, 2020) -->
<HTML lang="en">
<HEAD>
<TITLE>Installing HEALPix</TITLE>
<META NAME="description" CONTENT="Installing HEALPix">
<META NAME="keywords" CONTENT="install">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=utf-8">
<META NAME="viewport" CONTENT="width=device-width, initial-scale=1.0">
<META NAME="Generator" CONTENT="LaTeX2HTML v2020">
<!--Begin favicon-->
   <link rel='apple-touch-icon' sizes='180x180' href='images/favicons/apple-touch-icon.png?v=2017'>
   <link rel='icon' type='image/png' sizes='32x32' href='images/favicons/favicon-32x32.png?v=2017'>
   <link rel='icon' type='image/png' sizes='16x16' href='images/favicons/favicon-16x16.png?v=2017'>
   <link rel='manifest' href='images/favicons/manifest.json?v=2017'>
   <link rel='mask-icon' href='images/favicons/safari-pinned-tab.svg?v=2017' color='#5bbad5'>
   <link rel='shortcut icon' href='images/favicons/favicon.ico?v=2017'>
   <meta name='apple-mobile-web-app-title' content='HEALPix'>
   <meta name='application-name' content='HEALPix'>
   <meta name='msapplication-config' content='images/favicons/browserconfig.xml?v=2017'>
   <meta name='theme-color' content='#ffffff'>
<!--End favicon-->

<LINK REL="STYLESHEET" HREF="install.css">

</HEAD>

<body>

<DIV CLASS="navigation"><!--Navigation Panel-->
<IMG WIDTH="63" HEIGHT="24" ALT="previous" SRC="prev_g.png"> 
<A
 HREF="main.htm">
<IMG WIDTH="26" HEIGHT="24" ALT="up" SRC="up.png"></A> 
<A
 HREF="main.htm">
<IMG WIDTH="37" HEIGHT="24" ALT="next" SRC="nx_grp.png"></A>   
<BR>
<strong>Up:</strong> <A
 HREF="main.htm">Main Page</A>

<strong> Next:</strong> <A
 HREF="main.htm">Main Page</A>
<strong> Top:</strong> <a href="main.htm">Main Page</a></DIV>
<!--End of Navigation Panel-->

<P>

<P>
<H1 class="center"><strong>HEALPix</strong> Facility Installation Guidelines</H1>
<div id=abstract class="center">This document describes the installation for the <strong>HEALPix</strong> facilities.</div>
<P class="center"><STRONG>Eric Hivon, Anthony J.&nbsp;Banday, Matthias Bartelmann, Benjamin D.&nbsp;Wandelt,
Frode K.&nbsp;Hansen and Krzysztof M.&nbsp;G&#243;rski</STRONG></P>
<BR><P class="center"><I>Revision: </I>Version 3.80; June 22, 2021</P>
<P class="center"><A ID="tex2html1"
  HREF="https://healpix.sourceforge.io">https://healpix.sourceforge.io</A>
<BR><A ID="tex2html2"
  HREF="http://healpix.sf.net">http://healpix.sf.net</A></P>

<BR>

<H2><A ID="SECTION100">
TABLE OF CONTENTS</A>
</H2>
<!--Table of Contents-->

<UL CLASS="TofC">
<LI><A ID="tex2html247"
  HREF="install.htm#SECTION100">TABLE OF CONTENTS</A>
<LI><A ID="tex2html248"
  HREF="install.htm#SECTION200">Introduction</A>
<LI><A ID="tex2html249"
  HREF="install.htm#SECTION300">Installation Requirements</A>
<LI><A ID="tex2html250"
  HREF="install.htm#SECTION400"><SPAN  CLASS="texttt">healpix_doc</SPAN>: an easy access to <strong>HEALPix</strong> documentation</A>
<LI><A ID="tex2html251"
  HREF="install.htm#SECTION500">The Installation Procedure</A>
<UL>
<LI><A ID="tex2html252"
  HREF="install.htm#SECTION510">./configure [-L] [&mdash;auto=&lt;list&gt;] [-h] [-v]</A>
<UL>
<LI><A ID="tex2html253"
  HREF="install.htm#SECTION511">Configuration profile</A>
<LI><A ID="tex2html254"
  HREF="install.htm#SECTION512">C configuration</A>
<LI><A ID="tex2html255"
  HREF="install.htm#SECTION513">C++ configuration</A>
<LI><A ID="tex2html256"
  HREF="install.htm#SECTION514">Fortran 90 configuration</A>
<LI><A ID="tex2html257"
  HREF="install.htm#SECTION515">IDL/GDL/FL configuration</A>
<LI><A ID="tex2html258"
  HREF="install.htm#SECTION516">Java installation</A>
<LI><A ID="tex2html259"
  HREF="install.htm#SECTION517">Python (healpy) installation</A>
<LI><A ID="tex2html260"
  HREF="install.htm#SECTION518">libsharp library</A>
</UL>
<LI><A ID="tex2html261"
  HREF="install.htm#SECTION520">Compilation and installation</A>
<LI><A ID="tex2html262"
  HREF="install.htm#SECTION530">Testing the installation</A>
<LI><A ID="tex2html263"
  HREF="install.htm#SECTION540">Cleaning up</A>
<LI><A ID="tex2html264"
  HREF="install.htm#SECTION550">Linking a code with <strong>HEALPix</strong> library</A>
</UL>
<BR>
<LI><A ID="tex2html265"
  HREF="install.htm#SECTION600">A Note on <I>Re</I>-installation</A>
<LI><A ID="tex2html266"
  HREF="install.htm#SECTION700">Pkg-config files</A>
<LI><A ID="tex2html267"
  HREF="install.htm#SECTION800">Troubleshooting and further information</A>
<UL>
<LI><A ID="tex2html268"
  HREF="install.htm#SECTION810">Free Fortran90/95 Compilers</A>
<LI><A ID="tex2html269"
  HREF="install.htm#SECTION820">Installation under Microsoft Windows</A>
<UL>
<LI><A ID="tex2html270"
  HREF="install.htm#SECTION821">Installation on Windows 7 with Cygwin</A>
<LI><A ID="tex2html271"
  HREF="install.htm#SECTION822">Other Windows configurations</A>
</UL>
<LI><A ID="tex2html272"
  HREF="install.htm#SECTION830">Problems with CFITSIO</A>
<LI><A ID="tex2html273"
  HREF="install.htm#SECTION840"><SPAN  CLASS="texttt">diff</SPAN> shows that the test files are different from
the supplied files</A>
<LI><A ID="tex2html274"
  HREF="install.htm#SECTION850">Try <SPAN  CLASS="texttt">unlimit</SPAN></A>
<LI><A ID="tex2html275"
  HREF="install.htm#SECTION860"><SPAN  CLASS="texttt">hidl</SPAN> usage</A>
<LI><A ID="tex2html276"
  HREF="install.htm#SECTION870">Using <strong>HEALPix</strong> IDL together with other IDL libraries</A>
<LI><A ID="tex2html277"
  HREF="install.htm#SECTION880">Mac OS X,  X11 and IDL cursor</A>
<LI><A ID="tex2html278"
  HREF="install.htm#SECTION890">Using GDL instead of IDL</A>
<LI><A ID="tex2html279"
  HREF="install.htm#SECTION8100">Using FL instead of IDL</A>
</UL>
<BR>
<LI><A ID="tex2html280"
  HREF="install.htm#SECTION900">Appendix I: Recent Changes and New Features</A>
<UL>
<LI><A ID="tex2html281"
  HREF="install.htm#SECTION910">Bug corrections and Improvements in Version 3.80</A>
<UL>
<LI><A ID="tex2html282"
  HREF="install.htm#SECTION911">General</A>
<LI><A ID="tex2html283"
  HREF="install.htm#SECTION912">C++</A>
<LI><A ID="tex2html284"
  HREF="install.htm#SECTION913">Fortran 90 facilities and subroutines</A>
<LI><A ID="tex2html285"
  HREF="install.htm#SECTION914">IDL</A>
<LI><A ID="tex2html286"
  HREF="install.htm#SECTION915">Python</A>
</UL>
</UL>
<BR>
<LI><A ID="tex2html287"
  HREF="install.htm#SECTION1000">Appendix II: Older changes (versions 3.00 to 3.70)</A>
</UL>
<!--End of Table of Contents-->

<P>

<H1><A ID="SECTION200">
Introduction</A>
</H1>

<P>
In this document the installation procedure for the <strong>HEALPix</strong> 
distribution is outlined. <strong>HEALPix</strong> comprises a suite of Fortran 90, C++, 
IDL, Java and Python routines
providing both stand-alone facilities and callable subroutines as an alternative
for those users who wish to build their own tools.
A set of C subroutines and functions is also provided. 

<P>
The distribution can be downloaded as a gzipped tarred file, <EM>or</EM> as a zipped file,
which can respectively be unpacked by executing the commands<A ID="tex2html3"
  HREF="installfootnode.htm#foot2041"><SUP><SPAN CLASS="arabic">1</SPAN></SUP></A> <BR>
<SPAN  CLASS="texttt">% gunzip Healpix_3.80.tar.gz</SPAN>
<BR><SPAN  CLASS="texttt">% tar -xpf Healpix_3.80.tar</SPAN>
<BR>
or 
<BR><SPAN  CLASS="texttt">% tar -xzpf Healpix_3.80.tar.gz</SPAN>
<BR>
or 
<BR><SPAN  CLASS="texttt">% unzip Healpix_3.80.zip</SPAN>
<BR>
creating a directory named <SPAN  CLASS="texttt">Healpix_3.80</SPAN> whose structure is shown in Figure
<A HREF="#fig:dirtree">1</A>.

<P>

<DIV class="CENTER"><A ID="page:dirtree"></A><A ID="fig:dirtree"></A><A ID="2044"></A>
<TABLE>
<CAPTION class="BOTTOM"><STRONG>Figure 1:</STRONG>
The directory structure for the <strong>HEALPix</strong> distribution. </CAPTION>
<TR><TD>
<DIV CLASS="centerline" ID="par5284" ALIGN="CENTER">
<IMG
  WIDTH="720" HEIGHT="533" STYLE=""
 SRC="./new_dir_tree.png"
 ALT="Image new_dir_tree"></DIV>

<P></TD></TR>
</TABLE>
</DIV>

<P>
As with most freely available software, the distribution
comes with caveats, the major one being that although we have attempted
to automate the installation as much as possible, not all eventualities
can ever be foreseen. We have tested the installation on the following 
platforms: <BR>
AIX, IRIX, IRIX64, Linux, SunOS, ALPHA and Darwin (MacOS) <BR>

<P>
There may be problems in the facility build due to the local system 
configuration which is beyond our control. 

<P>

<H1><A ID="SECTION300"></A>
<A ID="sec:requirements"></A>
<BR>
Installation Requirements
</H1>

<P>
<BR><P></P>
<DIV class="CENTER"><A ID="2046"></A>
<TABLE>
<CAPTION><STRONG>Table 1:</STRONG>
  Documentation on the installation and usage of the different packages</CAPTION>
<TR><TD><TABLE class="PAD  BORDER" style="">
<TR><TH CLASS="LEFT TOP"  style="width:75px"><SPAN  CLASS="textbf">Healpix Package</SPAN></TH>
<TH CLASS="LEFT TOP"  style="width:175px"><SPAN  CLASS="textbf">Information on installation</SPAN></TH>
<TH CLASS="LEFT TOP"  style="width:200px"><SPAN  CLASS="textbf">Information on routines</SPAN></TH>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:75px">&nbsp;</TD>
<TD CLASS="LEFT TOP"  style="width:175px">&nbsp;</TD>
<TD CLASS="LEFT TOP"  style="width:200px">&nbsp;</TD>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:75px">
Fortran 90</TD>
<TD CLASS="LEFT TOP"  style="width:175px">This document</TD>
<TD CLASS="LEFT TOP"  style="width:200px"><A ID="tex2html6"
  HREF="facilities.htm">"Fortran Facilities"</A>
and 
<A ID="tex2html7"
  HREF="subroutines.htm">"Fortran Subroutines"</A>
documents</TD>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:75px">&nbsp;</TD>
<TD CLASS="LEFT TOP"  style="width:175px">&nbsp;</TD>
<TD CLASS="LEFT TOP"  style="width:200px">&nbsp;</TD>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:75px">IDL/GDL/FL</TD>
<TD CLASS="LEFT TOP"  style="width:175px">This document</TD>
<TD CLASS="LEFT TOP"  style="width:200px"><A ID="tex2html8"
  HREF="idl.htm">"IDL Facilities"</A></TD>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:75px">&nbsp;</TD>
<TD CLASS="LEFT TOP"  style="width:175px">&nbsp;</TD>
<TD CLASS="LEFT TOP"  style="width:200px">&nbsp;</TD>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:75px">C++</TD>
<TD CLASS="LEFT TOP"  style="width:175px">This document</TD>
<TD CLASS="LEFT TOP"  style="width:200px"><A ID="tex2html9"
  HREF="index_cxx.html">"C++ Facilities and Subroutines"</A>
(HTML only)</TD>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:75px">&nbsp;</TD>
<TD CLASS="LEFT TOP"  style="width:175px">&nbsp;</TD>
<TD CLASS="LEFT TOP"  style="width:200px">&nbsp;</TD>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:75px">C</TD>
<TD CLASS="LEFT TOP"  style="width:175px">This document, or  <SPAN  CLASS="texttt">src/C/README</SPAN></TD>
<TD CLASS="LEFT TOP"  style="width:200px"><A ID="tex2html10"
  HREF="csub.htm">"C Subroutines Overview"</A></TD>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:75px">&nbsp;</TD>
<TD CLASS="LEFT TOP"  style="width:175px">&nbsp;</TD>
<TD CLASS="LEFT TOP"  style="width:200px">&nbsp;</TD>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:75px">Java</TD>
<TD CLASS="LEFT TOP"  style="width:175px"><SPAN  CLASS="texttt">src/java/README</SPAN></TD>
<TD CLASS="LEFT TOP"  style="width:200px"><A ID="tex2html11"
  HREF="java/index.html">"Java Overview"</A>
(HTML only)</TD>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:75px">&nbsp;</TD>
<TD CLASS="LEFT TOP"  style="width:175px">&nbsp;</TD>
<TD CLASS="LEFT TOP"  style="width:200px">&nbsp;</TD>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:75px">Python</TD>
<TD CLASS="LEFT TOP"  style="width:175px">This document, or  <SPAN  CLASS="texttt">src/healpy/INSTALL</SPAN></TD>
<TD CLASS="LEFT TOP"  style="width:200px"><A ID="tex2html12"
  HREF="https://healpy.readthedocs.io/en/latest">"Healpy
Documentation"</A>
(HTML only)</TD>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:75px">&nbsp;</TD>
<TD CLASS="LEFT TOP"  style="width:175px">&nbsp;</TD>
<TD CLASS="LEFT TOP"  style="width:200px">&nbsp;</TD>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:75px"></TD>
<TD CLASS="LEFT TOP"  style="width:175px">&nbsp;</TD>
<TD CLASS="LEFT TOP"  style="width:200px">&nbsp;</TD>
</TR>
</TABLE>
</TD></TR>
</TABLE>
</DIV><P></P>
<BR>

<P>
The major part of the <strong>HEALPix</strong> distribution is written in both <SPAN  CLASS="textbf">Fortran 90</SPAN> and <SPAN  CLASS="textbf">C++</SPAN> and
so the appropriate compiler(s) must be present (Linux and Darwin users should look
at Section&nbsp;<A HREF="#sec:freef90compilers">7.1</A> about free F90 compilers. Microsoft Windows
users should look at Section&nbsp;<A HREF="#sec:windows">7.2</A>). Many visualisation tools and map
manipulation routines are provided in <SPAN  CLASS="textbf">IDL</SPAN> (please note 
that at least version 6.4 is required), <SPAN  CLASS="textbf">Java</SPAN> and <SPAN  CLASS="textbf">Python</SPAN>. Some of the <strong>HEALPix</strong> routines are
also available in <SPAN  CLASS="textbf">C</SPAN>. 
<BR>
Starting with version 3.0, the
<A ID="tex2html30"
  HREF="https://github.com/gnudatalanguage/gdl">healpy</A>
(HEALPix in <SPAN  CLASS="textbf">Python</SPAN>) library has been integrated into <strong>HEALPix</strong> releases. Since it
is, to a large extent, a
wrapper to the C++ routines, installing it also requires a C++ compiler (on top
of <SPAN  CLASS="texttt">python</SPAN> and a few supporting Python libraries) but it will perform
its own compilation of the current <strong>HEALPix</strong> C++ library.
<BR>
Starting with version 3.10, all the (computation intensive) Spherical Harmonics 
operations required by the C++, Fortran and Python routines
are performed with the highly optimized C-written <SPAN  CLASS="texttt">libsharp</SPAN> library, 
also included in the package, and which was further optimized in 
<A HREF="#install:v360">version 3.60</A>.

<P>
<EM>This section and the next focus on the compilation and installation of the
  <SPAN  CLASS="textbf">C</SPAN>, <SPAN  CLASS="textbf">C++</SPAN>, <SPAN  CLASS="textbf">Fortran&nbsp;90</SPAN>, <SPAN  CLASS="textbf">IDL</SPAN> and
<SPAN  CLASS="textbf">Python</SPAN> routines and <SPAN  CLASS="textbf">libsharp</SPAN> library. For more information on the 
<SPAN  CLASS="textbf">Java</SPAN> routines see table&nbsp;<A HREF="#tab:allpackages">1</A>.</EM>

<P>
The configure script is written in the Bourne shell. The script
attempts to generate a <SPAN  CLASS="texttt">Makefile</SPAN> which is tailored to one of 
the above Operating Systems (OS's) and using 
<SPAN  CLASS="texttt">Makefile.in</SPAN> as a template for non system-specific statements. 
Only the basic UNIX make facility is required to build the software, although we do
still recommend the GNU make facility (<kbd><A ID="tex2html14"
  HREF="https://ftp.gnu.org/gnu/make/">https://ftp.gnu.org/gnu/make/</A></kbd>).
In addition, several environment configuration files and an IDL/GDL/FL startup file are
generated. These automatically establish
various environment variables and aliases to make the use of the
<strong>HEALPix</strong> package simpler. 

<P>
The <strong>HEALPix</strong> <SPAN  CLASS="textbf">Fortran 90</SPAN>, <SPAN  CLASS="textbf">C++</SPAN>, <SPAN  CLASS="textbf">C</SPAN> and <SPAN  CLASS="textbf">Python</SPAN> distributions also
require the publicly available CFITSIO library. Note that the 
<SPAN  CLASS="textbf">Fortran 90</SPAN> routines require 
version 3.20 or more (post August 2009) 
of CFITSIO. Out of security concerns, the CFITSIO developers recommend using version 3.44 (April 2018) or more.

<P>
<TABLE class="PAD  BORDER" style="">
<TR><TH CLASS="LEFT TOP"  style="width:150px"><SPAN  CLASS="textbf">Software Package</SPAN></TH>
<TH CLASS="LEFT TOP"  style="width:300px"><SPAN  CLASS="textbf">Source</SPAN></TH>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:150px">&nbsp;</TD>
<TD CLASS="LEFT TOP"  style="width:300px">&nbsp;</TD>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:150px">
CFITSIO V 3.20 (3.44) or more</TD>
<TD CLASS="LEFT TOP"  style="width:300px"><kbd><A ID="tex2html15"
  HREF="https://heasarc.gsfc.nasa.gov/fitsio/">https://heasarc.gsfc.nasa.gov/fitsio/</A></kbd></TD>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:150px">&nbsp;</TD>
<TD CLASS="LEFT TOP"  style="width:300px">&nbsp;</TD>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:150px"></TD>
<TD CLASS="LEFT TOP"  style="width:300px">&nbsp;</TD>
</TR>
</TABLE>
<BR>
<BR>
<BR>
<BR>

<P>
The <SPAN  CLASS="textbf">IDL</SPAN> visualization software is commercially
available at

<P>
<TABLE class="PAD  BORDER" style="">
<TR><TH CLASS="LEFT TOP"  style="width:150px"><SPAN  CLASS="textbf">Software Package</SPAN></TH>
<TH CLASS="LEFT TOP"  style="width:300px"><SPAN  CLASS="textbf">Source</SPAN></TH>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:150px">&nbsp;</TD>
<TD CLASS="LEFT TOP"  style="width:300px">&nbsp;</TD>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:150px">
IDL V 6.4 or more</TD>
<TD CLASS="LEFT TOP"  style="width:300px"><kbd><A ID="tex2html16"
  HREF="https://www.harrisgeospatial.com/Software-Technology/IDL">https://www.harrisgeospatial.com/Software-Technology/IDL</A></kbd></TD>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:150px">&nbsp;</TD>
<TD CLASS="LEFT TOP"  style="width:300px">&nbsp;</TD>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:150px"></TD>
<TD CLASS="LEFT TOP"  style="width:300px">&nbsp;</TD>
</TR>
</TABLE>
<BR>
<BR>
<BR>
<BR>
while the GNU Data Language <SPAN  CLASS="textbf">GDL</SPAN>, a <EM>free open</EM> clone of IDL 7.1, 
or
the freeware Fawlty Language <SPAN  CLASS="textbf">FL</SPAN>, a <EM>free closed</EM> clone of IDL 8, 
can also be used (with some
caveats, listed respectively in  &sect;<A HREF="#install:using_gdl">7.9</A> and &sect;<A HREF="#install:using_fl">7.10</A>) and can be downloaded for free from

<P>
<TABLE class="PAD  BORDER" style="">
<TR><TH CLASS="LEFT TOP"  style="width:150px"><SPAN  CLASS="textbf">Software Package</SPAN></TH>
<TH CLASS="LEFT TOP"  style="width:300px"><SPAN  CLASS="textbf">Source</SPAN></TH>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:150px">&nbsp;</TD>
<TD CLASS="LEFT TOP"  style="width:300px">&nbsp;</TD>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:150px">
GDL 1.0.0rc3 or more</TD>
<TD CLASS="LEFT TOP"  style="width:300px"><kbd><A ID="tex2html17"
  HREF="https://github.com/gnudatalanguage/gdl">https://github.com/gnudatalanguage/gdl</A></kbd></TD>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:150px">
FL 0.79.49 or more</TD>
<TD CLASS="LEFT TOP"  style="width:300px"><kbd><A ID="tex2html18"
  HREF="https://www.flxpert.hu/fl">https://www.flxpert.hu/fl</A></kbd> or <kbd><A ID="tex2html19"
  HREF="https://bitbucket.org/fawlty/fl/src/master">https://bitbucket.org/fawlty/fl/src/master</A></kbd></TD>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:150px">&nbsp;</TD>
<TD CLASS="LEFT TOP"  style="width:300px">&nbsp;</TD>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:150px"></TD>
<TD CLASS="LEFT TOP"  style="width:300px">&nbsp;</TD>
</TR>
</TABLE>
<BR>
<BR>
<BR>
<BR>

<P>
As it was already the case in version 1.20, users no longer need to acquire the
<SPAN  CLASS="textbf">IDL</SPAN>
Astronomy User's Library (<kbd><A ID="tex2html20"
  HREF="https://idlastro.gsfc.nasa.gov/homepage.html">https://idlastro.gsfc.nasa.gov/homepage.html</A></kbd>)
or the COBE (IDL) Analysis Software (<kbd><A ID="tex2html21"
  HREF="https://lambda.gsfc.nasa.gov/product/cobe/cgis.cfm">https://lambda.gsfc.nasa.gov/product/cobe/cgis.cfm</A></kbd>),
although we do recommend these packages to the user.
The 100-odd routines required for version 3.80 are contained in the
subdirectory <SPAN  CLASS="texttt">Healpix_3.80/src/idl/zzz_external</SPAN>.
These procedures are included in the <strong>HEALPix</strong> package unchanged and 
solely for the purpose of making it self contained. In this way,
we remove the burden of installation of additional libraries from 
the end user.

<P>
The  <SPAN  CLASS="textbf">Python</SPAN> <SPAN  CLASS="texttt">healpy</SPAN> package requires

<P>
<TABLE class="PAD  BORDER" style="">
<TR><TH CLASS="LEFT TOP"  style="width:150px"><SPAN  CLASS="textbf">Software Package</SPAN></TH>
<TH CLASS="LEFT TOP"  style="width:300px"><SPAN  CLASS="textbf">Source</SPAN></TH>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:150px">&nbsp;</TD>
<TD CLASS="LEFT TOP"  style="width:300px">&nbsp;</TD>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:150px">
Python 3.6 or more</TD>
<TD CLASS="LEFT TOP"  style="width:300px"><kbd><A ID="tex2html22"
  HREF="https://www.python.org">https://www.python.org</A></kbd></TD>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:150px">Numpy 1.13 or more</TD>
<TD CLASS="LEFT TOP"  style="width:300px"><kbd><A ID="tex2html23"
  HREF="https://numpy.scipy.org">https://numpy.scipy.org</A></kbd></TD>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:150px">Matplotlib 0.91.2 or more</TD>
<TD CLASS="LEFT TOP"  style="width:300px"><kbd><A ID="tex2html24"
  HREF="https://matplotlib.sourceforge.net">https://matplotlib.sourceforge.net</A></kbd></TD>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:150px">Cython</TD>
<TD CLASS="LEFT TOP"  style="width:300px"><kbd><A ID="tex2html25"
  HREF="https://cython.org">https://cython.org</A></kbd></TD>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:150px">Astropy.io.fits</TD>
<TD CLASS="LEFT TOP"  style="width:300px"><kbd><A ID="tex2html26"
  HREF="https://www.astropy.org">https://www.astropy.org</A></kbd></TD>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:150px">(PyFITS)</TD>
<TD CLASS="LEFT TOP"  style="width:300px"><kbd><A ID="tex2html27"
  HREF="https://pypi.org/project/pyfits/3.3">https://pypi.org/project/pyfits/3.3</A></kbd></TD>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:150px">&nbsp;</TD>
<TD CLASS="LEFT TOP"  style="width:300px">&nbsp;</TD>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:150px"></TD>
<TD CLASS="LEFT TOP"  style="width:300px">&nbsp;</TD>
</TR>
</TABLE>
<BR>
<BR>
<BR>
<BR>

<P>
While not required, the 
<SPAN  CLASS="texttt">IPython</SPAN> (<kbd><A ID="tex2html28"
  HREF="https://ipython.org">https://ipython.org</A></kbd>)
and
<SPAN  CLASS="texttt">jupyter</SPAN> (<kbd><A ID="tex2html29"
  HREF="https://jupyter.org">https://jupyter.org</A></kbd>)
interfaces can also be useful.

<P>
A parallel implementation (based on OpenMP, for shared memory architectures) of the Spherical Harmonics
Transforms involved in <SPAN  CLASS="textbf">F90</SPAN> <SPAN  CLASS="texttt">synfast, anafast, smoothing, plmgen, alteralm</SPAN>
and <SPAN  CLASS="textbf">C++</SPAN>
<SPAN  CLASS="texttt">synalm_cxx, alm2map_cxx, anafast_cxx, smoothing_cxx, rotalm_cxx </SPAN> ... is now
available by default and can be readily compiled and used with the standard installation script. 

<P>
A set of routines with MPI parallelization (for distributed memory architectures)
 is also available for Spherical Harmonics Transform, thanks to the work of H.K. Eriksen
 (UIO) and Snorre Boasson (ITEA, NTNU). See the <SPAN  CLASS="textbf">F90</SPAN>
 subroutines documentation for more information on how to use those routines in
 your code.

<P>
We found that it was remarkably difficult to find 
random number generators in the public
domain which are simple yet
powerful and easy to use. 
We are providing one (both in <SPAN  CLASS="textbf">C++</SPAN> and <SPAN  CLASS="textbf">F90</SPAN>) which is an adaptation of an xorshift generator described
 in Marsaglia (Journal of Statistical Software 2003, vol 8). It has a theoretical period of <!-- MATH
 $2^{128}-1 \approx 3.4\ 10^{38}$
 -->
<SPAN CLASS="MATH"><IMG
 STYLE="height: 1.92ex; vertical-align: -0.29ex; " SRC="installimg1.png"
 ALT="$2^{128}-1 \approx 3.4\ 10^{38}$"></SPAN>.

<P>

<H1><A ID="SECTION400"></A>
<A ID="install:healpix_doc"></A>
<BR>
<SPAN  CLASS="texttt">healpix_doc</SPAN>: an easy access to <strong>HEALPix</strong> documentation
</H1>
The shell script <SPAN  CLASS="texttt">healpix_doc</SPAN> now is available to provide easy
access to the HTML, PDF and/or EPUB documentation of <EM>all</EM> Healpix packages.
It will automatically open a web browser, a PDF viewer, or an EPUB viewer (among those found on the
system) on the documentation
available locally (at <SPAN  CLASS="texttt">$HEALPIX/doc</SPAN>) or on remote web sites. To use it, simply type
<BR><kbd>  &nbsp;&nbsp;&nbsp;&nbsp; $HEALPIX/healpix_doc -e &nbsp;&nbsp;&nbsp;&nbsp; </kbd>  or
<BR><kbd>  &nbsp;&nbsp;&nbsp;&nbsp; $HEALPIX/healpix_doc -h &nbsp;&nbsp;&nbsp;&nbsp; </kbd>  or
<BR><kbd>  &nbsp;&nbsp;&nbsp;&nbsp; $HEALPIX/healpix_doc -p &nbsp;&nbsp;&nbsp;&nbsp; </kbd> 
<BR>
to access respectively the EPUB, HTML and PDF documentation. The default browser and
viewers used by <SPAN  CLASS="texttt">healpix_doc</SPAN> can <EM>optionally</EM> be set with the
environment variables
<SPAN  CLASS="texttt">$HEALPIX_HTML_BROWSER</SPAN>, 
<SPAN  CLASS="texttt">$HEALPIX_EPUB_VIEWER</SPAN> and
<SPAN  CLASS="texttt">$HEALPIX_PDF_VIEWER</SPAN>.
<BR><A ID="tex2html32"
  HREF="https://en.wikipedia.org/wiki/EPUB">EPUB</A>
is an open e-book format whose dynamical layout allows the same document to be read comfortably on 
screens of any size.
It is supported by many commercial and free e-readers, with sometimes unequal results.
Among the <EM>free</EM> ones we tested, we can recommend

<UL>
<LI><SPAN  CLASS="texttt">ebook-viewer</SPAN>, included in the open source Calibre e-book manager package 
(<kbd><A ID="tex2html31"
  HREF="https://calibre-ebook.com">https://calibre-ebook.com</A></kbd>, used to generate the <strong>HEALPix</strong> EPUB files)
available for many platforms, including Linux, MacOS and Windows,
</LI>
<LI><SPAN  CLASS="texttt">Books</SPAN> (formerly iBooks), pre-installed in MacOS and <A ID="tex2html33"
  HREF="https://apps.apple.com/us/app/apple-books/id364709193">available for download</A>
for iOS and watchOS,
</LI>
<LI>the cost-free, ad-free 
<A ID="tex2html34"
  HREF="https://play.google.com/store/apps/details?id=com.faultexception.reader&amp;hl=en"><SPAN  CLASS="texttt">Lithium EPUB reader</SPAN></A>
for Android.
</LI>
</UL>

<P>

<H1><A ID="SECTION500">
The Installation Procedure</A>
</H1>

<P>
If the user has one of the supported OS's, then installation proceeds utilizing
the following commands. If your OS is not supported, the configuration step
should be omitted, <SPAN  CLASS="texttt">Makefile.in</SPAN> should be copied as <SPAN  CLASS="texttt">Makefile</SPAN> and explicitly
tailored to the user environment.

<P>
<DIV class="RIGHT">
<TABLE class="PAD " style="">
<TR><TD CLASS="LEFT TOP"  style="width:150px"><SPAN  CLASS="texttt">% ./configure</SPAN> <EM>[-L] [&mdash;auto=&lt;list&gt;]</EM></TD>
<TD CLASS="LEFT TOP"  style="width:300px">uses <SPAN  CLASS="texttt">Makefile.in</SPAN> as a template to build 
                         the correct Makefile (from user inputs as required), it
                         will also configure the IDL/GDL/FL routines</TD>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:150px"><SPAN  CLASS="texttt">% make</SPAN></TD>
<TD CLASS="LEFT TOP"  style="width:300px">builds all the facilities</TD>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:150px"><SPAN  CLASS="texttt">% make test</SPAN></TD>
<TD CLASS="LEFT TOP"  style="width:300px">tests all the facility previously compiled</TD>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:150px"><SPAN  CLASS="texttt">% make clean</SPAN></TD>
<TD CLASS="LEFT TOP"  style="width:300px">removes object (<SPAN  CLASS="texttt">*.o</SPAN>) files</TD>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:150px"><SPAN  CLASS="texttt">% make tidy</SPAN></TD>
<TD CLASS="LEFT TOP"  style="width:300px">removes object files, module files (<SPAN  CLASS="texttt">*.mod</SPAN>), executables and libraries</TD>
</TR>
<TR><TD CLASS="LEFT TOP"  style="width:150px"><SPAN  CLASS="texttt">% make distclean</SPAN></TD>
<TD CLASS="LEFT TOP"  style="width:300px">same as above and restores the directories to the state of the 
                          original distribution</TD>
</TR>
</TABLE>
</DIV>
These different steps are detailed below.

<P>

<H2><A ID="SECTION510"></A>
<A ID="sub:configure"></A><A ID="install:configure"></A>
<BR>
./configure [-L] [&mdash;auto=&lt;list&gt;] [-h] [-v]
</H2>
The <SPAN  CLASS="texttt">./configure</SPAN> script manages the configuration of the C, C++,
Fortran90, IDL and Python suites of routines and facilities.

<P>
An online help is available with 
<SPAN  CLASS="texttt">./configure&nbsp;-h</SPAN>, while 
<SPAN  CLASS="texttt">./configure&nbsp;-v</SPAN> 
will return the <strong>HEALPix</strong> release number (currently 3.80) and exit.

<P>
The <SPAN  CLASS="texttt">-L</SPAN> option can be used to write the <strong>HEALPix</strong> specific configuration files
into the <strong>HEALPix</strong> directory itself rather than in installer's home directory (see
&sect;<A HREF="#subsub:conf">4.1.1</A>).
Using the <SPAN  CLASS="texttt">-L</SPAN> option is recommended when doing a <EM>project</EM> or <EM>system wide</EM> installation of
<strong>HEALPix</strong> to be accessed by several different users.

<P>
Two new features have been introduced in <A HREF="#install:v360">version 3.60</A>.

<UL>
<LI>The <SPAN  CLASS="texttt">configure</SPAN> script now supports the <SPAN  CLASS="texttt">-&ndash;auto=</SPAN><I>&lt;list&gt;</I> 
option to perform an automated (batch) configuration of the various packages using default answers
provided by the script (possibly customized with environment variables described below)
where <I>&lt;list&gt;</I> is a comma separated list of items to be configured, to be chosen (and combined)
among

<UL>
<LI><SPAN  CLASS="texttt">all</SPAN>:    (re-)configures everything; 
<BR>    <SPAN  CLASS="texttt">-&ndash;auto=all</SPAN> is the same as <SPAN  CLASS="texttt">-&ndash;auto=profile,sharp,c,cxx,f90,idl,healpy</SPAN>;
</LI>
<LI><SPAN  CLASS="texttt">c</SPAN>:       configures C and the required items, same as <SPAN  CLASS="texttt">profile,c</SPAN>;
</LI>
<LI><SPAN  CLASS="texttt">cxx</SPAN>:     configures C++ and the required items, same as <SPAN  CLASS="texttt">profile,cxx</SPAN>,
<BR>
libsharp will also be configured, compiled and installed if it was not previously done;
</LI>
<LI><SPAN  CLASS="texttt">cpp</SPAN>:     same as <SPAN  CLASS="texttt">cxx</SPAN> (see above);
</LI>
<LI><SPAN  CLASS="texttt">f90</SPAN>:     configures F90 and the required items, same as <SPAN  CLASS="texttt">profile,f90</SPAN>,
<BR>
libsharp will also be configured, compiled and installed if it was not previously done;
</LI>
<LI><SPAN  CLASS="texttt">idl</SPAN>:     configures IDL and the required items, same as <SPAN  CLASS="texttt">profile,idl</SPAN>;
</LI>
<LI><SPAN  CLASS="texttt">sharp</SPAN>:   forces the (re-)configuration, compilation and installation of libsharp (required by F90 and C++);
</LI>
<LI><SPAN  CLASS="texttt">profile</SPAN>: configures user or system configuration files (required by C, C++, F90 and IDL);
</LI>
<LI><SPAN  CLASS="texttt">healpy</SPAN>:  configures healpy.
</LI>
</UL>

<P>
</LI>
<LI>If the environment variables 
      <SPAN  CLASS="texttt">CC</SPAN>                 (C compiler, relevant for C,C++,F90,healpy,sharp),
      <SPAN  CLASS="texttt">C_FITS</SPAN>, <SPAN  CLASS="texttt">C_SHARED</SPAN> (<A HREF="#install:C:config">C</A>),
      <SPAN  CLASS="texttt">CXX</SPAN>, <SPAN  CLASS="texttt">CXXFLAGS</SPAN>, <SPAN  CLASS="texttt">CXX_PARAL</SPAN>      (<A HREF="#install:cpp_config">C++</A>),
      <SPAN  CLASS="texttt">FC</SPAN>,  <SPAN  CLASS="texttt">F_DIRSUFF</SPAN>, <SPAN  CLASS="texttt">F_OPT</SPAN>, 
      <SPAN  CLASS="texttt">F_PARAL</SPAN>, <SPAN  CLASS="texttt">F_SHARED</SPAN>         (<A HREF="#install:f90:config">F90</A>),
      <SPAN  CLASS="texttt">FITSDIR</SPAN>,   <SPAN  CLASS="texttt">FITSINC</SPAN>   (C,C++,F90),
      <SPAN  CLASS="texttt">PYTHON</SPAN>             (<A HREF="#install:healpy:config">healpy</A>),
      <SPAN  CLASS="texttt">PROFILE_EDIT</SPAN> (<A HREF="#install:profile">profile</A>),
      <SPAN  CLASS="texttt">SHARP_COPT</SPAN>, <SPAN  CLASS="texttt">SHARP_PARAL</SPAN> (<A HREF="#install:libsharp:config">sharp</A>),
  and <SPAN  CLASS="texttt">papersize</SPAN>, <SPAN  CLASS="texttt">ps_com</SPAN>, <SPAN  CLASS="texttt">pdf_com</SPAN>, <SPAN  CLASS="texttt">gif_com</SPAN>  (<A HREF="#install:idlgdlconfig">IDL</A>)
are defined prior to calling the <SPAN  CLASS="texttt">configure</SPAN> script, they will change the
default values proposed in the (interactive or automated) configuration process.
<BR><A ID="install:configure:boolean"></A><SPAN  CLASS="textbf">The online help <SPAN  CLASS="texttt">./configure&nbsp;-h</SPAN> will show the current value of these variables.</SPAN>
<BR>
As detailed further down, several of these variables are <SPAN  CLASS="textbf">boolean</SPAN> in nature, with the values
<SPAN  CLASS="texttt">1</SPAN>, <SPAN  CLASS="texttt">y</SPAN>, <SPAN  CLASS="texttt">Y</SPAN>, <SPAN  CLASS="texttt">t</SPAN> or <SPAN  CLASS="texttt">T</SPAN> meaning 'true',
and 
<SPAN  CLASS="texttt">0</SPAN>, <SPAN  CLASS="texttt">n</SPAN>, <SPAN  CLASS="texttt">N</SPAN>, <SPAN  CLASS="texttt">f</SPAN> or <SPAN  CLASS="texttt">F</SPAN> meaning 'false'.
</LI>
</UL>
These two new features can of course be combined.
For instance, in Bourne related shells (eg, <SPAN  CLASS="texttt">sh, bash, dash, ksh, zsh</SPAN>), the command
<BR><SPAN  CLASS="texttt">FC=ifort CC=icc ./configure -&ndash;auto=f90</SPAN>
<BR>
and in C related shells (eg, <SPAN  CLASS="texttt">csh, tcsh</SPAN>)
<BR><SPAN  CLASS="texttt">setenv FC ifort ; setenv CC icc ; ./configure -&ndash;auto=f90</SPAN>
<BR>
will automatically run the <SPAN  CLASS="texttt">configure</SPAN> script for the <SPAN  CLASS="texttt">libsharp</SPAN> (if not previously done) 
and <SPAN  CLASS="texttt">f90</SPAN> package items, using Intel's Fortran and C compilers.

<P>
<A ID="install:profile"></A>
<H3><A ID="SECTION511"></A><A ID="subsub:conf"></A>
<BR>
Configuration profile
</H3>A feature introduced in previous releases and enhanced since v2.10, is that 
the configure script creates a shell configuration file 
<BR>(located in
<SPAN  CLASS="texttt">${HOME}/.healpix/3_80 _</SPAN><EM><SPAN CLASS="MATH"><IMG
 STYLE="height: 2.33ex; vertical-align: -0.68ex; " SRC="installimg2.png"
 ALT="$\langle$"></SPAN>OS_TYPE<SPAN CLASS="MATH"><IMG
 STYLE="height: 2.33ex; vertical-align: -0.68ex; " SRC="installimg3.png"
 ALT="$\rangle$"></SPAN></EM><SPAN  CLASS="texttt">/config</SPAN>
or in

<BR><SPAN  CLASS="texttt">${HEALPIX}/confdir/3_80 _</SPAN><EM><SPAN CLASS="MATH"><IMG
 STYLE="height: 2.33ex; vertical-align: -0.68ex; " SRC="installimg2.png"
 ALT="$\langle$"></SPAN>OS_TYPE<SPAN CLASS="MATH"><IMG
 STYLE="height: 2.33ex; vertical-align: -0.68ex; " SRC="installimg3.png"
 ALT="$\rangle$"></SPAN></EM><SPAN  CLASS="texttt">/config</SPAN>
if <SPAN  CLASS="texttt">./configure -L</SPAN> was used)
according to shell
type in which various environment variables and aliases are defined
for your convenience. If you agree upon prompting
(or set the <A HREF="#install:configure:boolean">boolean</A> 
environment variable <SPAN  CLASS="texttt">PROFILE_EDIT</SPAN> to an affirmative value), 
it will also change your default system profile during installation to
automatically source this profile. If you do not agree to this change 
(or set the <A HREF="#install:configure:boolean">boolean</A> environment variable <SPAN  CLASS="texttt">PROFILE_EDIT</SPAN> to a false value),
you will need to explicitly source the configuration file above for any session in
which you intend to run <strong>HEALPix</strong> facilities. 
<SPAN  CLASS="textbf">In particular, you will have to make sure that the <SPAN  CLASS="texttt">HEALPIX</SPAN> system variable is correctly
defined (as the full path to the <strong>HEALPix</strong> directory) before running
the package</SPAN>.

<P>
<A ID="install:C:config"></A>
<H3><A ID="SECTION512">
C configuration</A>
</H3>The <SPAN  CLASS="texttt">./configure</SPAN> script will ask for the C compiler and options to
be used, and for the full path of an installed <SPAN  CLASS="texttt">cfitsio</SPAN> library to (optionally) link to.
By default, only a static library is created, but the user can also ask for
 a shared (Unix/Linux systems) or dynamic (Darwin) library. 
<BR>
The environment variables <SPAN  CLASS="texttt">CC</SPAN>, <SPAN  CLASS="texttt">C_FITS</SPAN> (<A HREF="#install:configure:boolean">boolean</A>), <SPAN  CLASS="texttt">FITSDIR</SPAN>, <SPAN  CLASS="texttt">FITSINC</SPAN> 
and <SPAN  CLASS="texttt">C_SHARED</SPAN> (<A HREF="#install:configure:boolean">boolean</A>) can be used to control the script behavior.
<BR>
After compilation
(see <SPAN  CLASS="texttt">make</SPAN> section) and linking, all libraries will be 
in <SPAN  CLASS="texttt">${HEALPIX}/lib/chealpix.*</SPAN> .
<BR>
See also &sect;<A HREF="#sec:pkg-config">6</A> on <A HREF="#install:pkg-config"><SPAN  CLASS="texttt">pkg-config</SPAN></A>.

<P>
<A ID="install:cpp_config"></A>
<H3><A ID="SECTION513"></A><A ID="sec:cpp_config"></A>
<BR>
C++ configuration
</H3>Starting with <A HREF="#install:v360">version 3.60</A>, the <SPAN  CLASS="texttt">./configure</SPAN> script will be used to
provide information (like the choice of C++ compiler and options) 
to an automated (<SPAN  CLASS="texttt">autoconf</SPAN> generated) configure script, 
(located in <SPAN  CLASS="texttt">src/cxx/configure</SPAN>), which will take care of the configuration.
<BR>
The environment variables <SPAN  CLASS="texttt">CC</SPAN>, <SPAN  CLASS="texttt">CXX</SPAN>, <SPAN  CLASS="texttt">CXXFLAGS</SPAN>, <SPAN  CLASS="texttt">FITSDIR</SPAN> and <SPAN  CLASS="texttt">FITSINC</SPAN>
can be used to customize the whole process. If the latter two are not explicitely set, 
the autoconf configure script will look for a <SPAN  CLASS="texttt">cfitsio</SPAN> installation on its own.
<BR>
The configuration of <A HREF="#install:libsharp:config"><SPAN  CLASS="texttt">libsharp</SPAN></A> will be also taken care of at this stage.
<BR>
The <A HREF="#install:configure:boolean">boolean</A> variable <SPAN  CLASS="texttt">CXX_PARAL</SPAN>, introduced in version 3.80 and defaulting to 1 (=true), controls whether the code will be parallelized (with OpenMP) or not. To obtain a serial implementation of the code, set <SPAN  CLASS="texttt">CXX_PARAL=0</SPAN> and make sure no OpenMP related flags appear in <SPAN  CLASS="texttt">CXXFLAGS</SPAN>.
<BR>
At odds with previous versions, the C++ binaries, libraries and header files will be installed in 
<SPAN  CLASS="texttt">${HEALPIX}/bin</SPAN>, 
<SPAN  CLASS="texttt">${HEALPIX}/lib</SPAN> and 
<SPAN  CLASS="texttt">${HEALPIX}/include</SPAN> directories respectively.

<BR>
If the <strong>HEALPix</strong> configuration file is sourced as described in &sect;<A HREF="#subsub:conf">4.1.1</A>, the full path to the C++
executables will be added to the environment PATH variable.
<BR>
See also &sect;<A HREF="#sec:pkg-config">6</A> on <A HREF="#install:pkg-config"><SPAN  CLASS="texttt">pkg-config</SPAN></A>.

<P>
<A ID="install:f90:config"></A>
<H3><A ID="SECTION514">
Fortran 90 configuration</A>
</H3>When you run <SPAN  CLASS="texttt">./configure</SPAN> on a supported system 
you will be prompted to enter compiler optimisation flags.
We have not attempted to provide the best optimisation flags for all
operating systems. The configure
script will have a guess at optimisation options for some systems, but it
is up to the user to figure out an optimal set<A ID="tex2html35"
  HREF="installfootnode.htm#foot2060"><SUP><SPAN CLASS="arabic">2</SPAN></SUP></A>. 
From our experience,
we have not found significant accumulation of numerical error even
when using the most aggressive optimisation level available. 
<BR>
The environment variable <SPAN  CLASS="texttt">FITSDIR</SPAN>, <SPAN  CLASS="texttt">CC</SPAN>, <SPAN  CLASS="texttt">FC</SPAN>, <SPAN  CLASS="texttt">F_DIRSUFF</SPAN>, <SPAN  CLASS="texttt">F_OPT</SPAN>, 
<SPAN  CLASS="texttt">F_SHARED</SPAN> (<A HREF="#install:configure:boolean">boolean</A>) and <SPAN  CLASS="texttt">F_PARAL</SPAN> (<A HREF="#install:configure:boolean">boolean</A>) can be used to customize the configuration.
<BR>
The configuration of <A HREF="#install:libsharp:config"><SPAN  CLASS="texttt">libsharp</SPAN></A> will be also taken care of at this stage.
<BR>
If the <strong>HEALPix</strong> configuration file is sourced as described in &sect;<A HREF="#subsub:conf">4.1.1</A>, the full path to the F90
executables will be added to the environment PATH variable.
<BR>
See also &sect;<A HREF="#sec:pkg-config">6</A> on <A HREF="#install:pkg-config"><SPAN  CLASS="texttt">pkg-config</SPAN></A>.

<P>
<A ID="install:idlgdlconfig"></A>
<H3><A ID="SECTION515"></A><A ID="install:idlgdlconfig"></A>
<BR>
IDL/GDL/FL configuration
</H3>You will be asked for the external applications, such as <SPAN  CLASS="texttt">gv</SPAN>, <SPAN  CLASS="texttt">xpdf</SPAN>, <SPAN  CLASS="texttt">display</SPAN>,
<SPAN CLASS="MATH"><IMG
 STYLE="height: 0.23ex; vertical-align: -0.10ex; " SRC="installimg4.png"
 ALT="$\ldots$"></SPAN> you want to use to visualize the
GIF, JPEG, PDF, Postscript and PNG files <A HREF="./idl_mollview.htm#idl:mollview:preview">created by IDL, GDL or FL</A>. 
<BR>
The environment variables <SPAN  CLASS="texttt">papersize</SPAN>, <SPAN  CLASS="texttt">ps_com</SPAN>, <SPAN  CLASS="texttt">pdf_com</SPAN> and <SPAN  CLASS="texttt">gif_com</SPAN> can be
used to customize this configuration.
<BR>
If the <strong>HEALPix</strong> configuration file is
sourced as described in &sect;<A HREF="#subsub:conf">4.1.1</A>, the aliases 
<SPAN  CLASS="texttt">hidl</SPAN> (<SPAN  CLASS="texttt">hidlde</SPAN>), 
<SPAN  CLASS="texttt">hgdl</SPAN> (<SPAN  CLASS="texttt">hgdlde</SPAN>) and/or
<SPAN  CLASS="texttt">hfl</SPAN> (<SPAN  CLASS="texttt">hflde</SPAN>)
are also defined to give you access to <strong>HEALPix</strong> routines from respectively IDL, GDL and/or FL, 
with a command-line (or graphical) interface.
<BR>
See the <A ID="tex2html36"
  HREF="idl.htm"><strong>HEALPix</strong> IDL Document</A>
for more
information on using <strong>HEALPix</strong> IDL/GDL/FL together with other IDL libraries, and &sect;<A HREF="#install:using_gdl">7.9</A>,<A HREF="#install:using_fl">7.10</A> on using GDL or FL instead of IDL.

<P>

<H3><A ID="SECTION516"></A><A ID="install:java:config"></A>
<BR>
Java installation
</H3>The configuration and installation of the <strong>HEALPix</strong> Java package is currently
handled separately. See table&nbsp;<A HREF="#tab:allpackages">1</A> for more information.

<P>
<A ID="install:healpy:config"></A>
<H3><A ID="SECTION517"></A><A ID="install:healpy:config"></A>
<BR>
Python (healpy) installation
</H3>The <SPAN  CLASS="texttt">./configure</SPAN> script will ask for the Python command you want to use 
(in case many coexist on your computer) and will check that its version number meets the <SPAN  CLASS="texttt">healpy</SPAN> requirements (see above), as well as for C and C++ compilers.
<BR>
The environment variables <SPAN  CLASS="texttt">PYTHON</SPAN>, <SPAN  CLASS="texttt">C</SPAN> and <SPAN  CLASS="texttt">CXX</SPAN> can be used to customize the configuration process.
<BR>
Note that during the compilation with <SPAN  CLASS="texttt">make</SPAN> (see below), the 
 <SPAN  CLASS="texttt">src/healpy/setup.py</SPAN> Python script will be invoked to automatically prompt a <EM>fresh</EM> compilation of the
 <SPAN  CLASS="texttt">src/cxx/*</SPAN> libraries, with all the options necessary to Python linkage, and
 can be done independently of the C++ installation described above.
<BR>
Note also that the <SPAN  CLASS="texttt">healpy</SPAN> compilation will very likely 
require an active network connection in order
to download on the fly some of the required Python ancillary packages.

<P>
<A ID="install:libsharp:config"></A>
<H3><A ID="SECTION518"></A><A ID="install:libsharp:config"></A>
<BR>
libsharp library
</H3>The <SPAN  CLASS="texttt">libsharp</SPAN> C-written library for optimized Spherical Harmonics operations
is used by the C++, Fortran, IDL and healpy routines and facilities. 
Starting with <A HREF="#install:v360">version 3.60</A>, a new, faster, implementation is in use, 
and will be configured (only once) at the same time as any of the C++ or Fortran packages,
 but can also be configured on its own.
<BR>
The environment variables <SPAN  CLASS="texttt">CC</SPAN> and <SPAN  CLASS="texttt">SHARP_COPT</SPAN> can be used to set respectively
the C compiler and its options proposed during the interactive or automated configuration process.
<BR>
For optimal performance, the C compilation flags should include <SPAN  CLASS="texttt">-ffast-math</SPAN>
and <SPAN  CLASS="texttt">-march=native</SPAN> (or your compiler's equivalent options), and may look like
<SPAN  CLASS="texttt">SHARP_COPT='-O3 -ffast-math -march=native -fopenmp'</SPAN> (multi-worded values must be enclosed in quotes).
<BR>
If you are using <SPAN  CLASS="texttt">gcc</SPAN> or <SPAN  CLASS="texttt">clang</SPAN> (see below) and you want to produce a portable,
high-performance library, and if you compiler and assembler support it,
you can also replace <SPAN  CLASS="texttt">-march=native</SPAN> by <SPAN  CLASS="texttt">-DMULTIARCH</SPAN>.
<BR>
If you are using <SPAN  CLASS="texttt">clang</SPAN> to compile <SPAN  CLASS="texttt">libsharp</SPAN>,
make sure it supports OpenMP (as in version 3.7 or more), and that OpenMP
is enabled explicitly among the compiler options
(possibly requiring the flag <SPAN  CLASS="texttt">-fopemp=libomp</SPAN> or <SPAN  CLASS="texttt">-fopemp=libiomp5</SPAN> 
instead of the usual <SPAN  CLASS="texttt">-fopemp</SPAN>
or by specifying the location of the OpenMP libraries during compilation and at run time).
<BR>
The <A HREF="#install:configure:boolean">boolean</A> variable <SPAN  CLASS="texttt">SHARP_PARAL</SPAN>, introduced in version 3.80 and defaulting to 1 (=true), controls whether the library will be parallelized (with OpenMP) or not. To obtain a serial implementation of <SPAN  CLASS="texttt">libsharp</SPAN>, set <SPAN  CLASS="texttt">SHARP_PARAL=0</SPAN> and make sure no OpenMP related flags appear in <SPAN  CLASS="texttt">SHARP_COPT</SPAN>.
<BR>
After compilation and installation (which, for <SPAN  CLASS="texttt">libsharp</SPAN> only,
 are done as early as the <SPAN  CLASS="texttt">configure</SPAN> step) 
the resulting library will be in
<SPAN  CLASS="texttt">${HEALPIX}/lib/libsharp*</SPAN> and the header files in
<SPAN  CLASS="texttt">${HEALPIX}/include/libsharp/sharp*.h</SPAN>.
<BR>
See also &sect;<A HREF="#sec:pkg-config">6</A> on <A HREF="#install:pkg-config"><SPAN  CLASS="texttt">pkg-config</SPAN></A>.

<P>

<H2><A ID="SECTION520">
Compilation and installation</A>
</H2>

<P>
The 
<BR><kbd>  &nbsp;&nbsp;&nbsp;&nbsp; make &nbsp;&nbsp;&nbsp;&nbsp; </kbd>  
<BR>
command will compile one or several of the C, C++, F90, libsharp and Python packages
depending on what was configured with the <SPAN  CLASS="texttt">./configure</SPAN> script.
Specific packages can be compiled with the respective commands 
<PRE>
   make c-all
   make cpp-all
   make f90-all
   make sharp-all
   make healpy-all
</PRE>

<P>
To perform several compilation jobs simultaneously, the command <SPAN  CLASS="texttt">make -j </SPAN><SPAN  CLASS="textit">[number_of_jobs]</SPAN>
can be used.

<P>
Please neglect any possible warnings at compile time. If you run into
trouble please refer to the section <A HREF="#sec:troubleshoot"><B>Troubleshooting and further
information</B></A>.

<P>
After running <SPAN  CLASS="texttt">make</SPAN>, the user must re-login to ensure that the new profiles built by the installation
procedure are correctly sourced. Only then will the
user have full access to the specific <strong>HEALPix</strong> 
environment variables etc.

<P>

<H2><A ID="SECTION530">
Testing the installation</A>
</H2>

<P>
All installed libraries and executables can be tested with 
<PRE>
   make test
</PRE>

<P>
while specific tests of the C, C++ and Fortran products can be performed with,
respectively
<PRE>
   make c-test
   make cpp-test
   make f90-test
   make sharp-test
   make healpy-test
</PRE>
For <SPAN  CLASS="texttt">f90-test</SPAN>, Table&nbsp;<A HREF="#tab:f90_tests">2</A> lists the codes tested with the
parameter files used, as well as the data files produced and the respective
reference files.

<P>
<BR><P></P>
<DIV class="CENTER"><A ID="2065"></A>
<TABLE>
<CAPTION><STRONG>Table 2:</STRONG>

 <SPAN CLASS="FOOTNOTESIZE">
Data files and images produced by the Fortran codes during the tests,
and the respective reference files to which they can be compared. All the files listed
are located or produced in the <SPAN  CLASS="texttt">Healpix_3.80/test</SPAN> directory. The GIF images of full sky maps were
produced using <SPAN  CLASS="texttt">map2gif</SPAN>. <EM>NA</EM>: No image available, because the data set
is not a sky map</SPAN></CAPTION>
<TR><TD><SPAN CLASS="FOOTNOTESIZE"></SPAN><TABLE class="PAD  BORDER" style="">
<TR><TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE">
</SPAN><SPAN CLASS="FOOTNOTESIZE"><B>code</B>    &amp; parameter file </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> output data 	</SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> reference data  </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> output image    </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> reference image </SPAN></TD>
</TR>
<TR><TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> 

</SPAN><SPAN CLASS="FOOTNOTESIZE"><B>synfast</B>  syn.par </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> test_map.fits 	</SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> map.fits 	  </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> test_map.gif   </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> map.gif </SPAN></TD>
</TR>
<TR><TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> 
                       </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> test_alm.fits 	</SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> alm.fits 	  </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> </SPAN><SPAN CLASS="FOOTNOTESIZE"><EM>NA</EM>        </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> </SPAN><SPAN CLASS="FOOTNOTESIZE"><EM>NA</EM> </SPAN></TD>
</TR>
<TR><TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> 
</SPAN><SPAN CLASS="FOOTNOTESIZE"><B>smoothing</B> smo.par </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> test_sm.fits		</SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> map_sm.fits 	  </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> test_sm.gif    </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> map_sm.gif </SPAN></TD>
</TR>
<TR><TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> 
</SPAN><SPAN CLASS="FOOTNOTESIZE"><B>ud_grade</B> udg.par </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> test_LOres.fits	</SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> map_LOres.fits </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> test_LOres.gif </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> map_LOres.gif </SPAN></TD>
</TR>
<TR><TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> 
</SPAN><SPAN CLASS="FOOTNOTESIZE"><B>hotspot</B>  hot.par </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> test_ext.fits	  	</SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> map_ext.fits   </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> test_ext.gif   </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> map_ext.gif </SPAN></TD>
</TR>
<TR><TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> 
		       </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> test_max.asc		</SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> max.asc 	  </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> </SPAN><SPAN CLASS="FOOTNOTESIZE"><EM>NA</EM> 	    </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> </SPAN><SPAN CLASS="FOOTNOTESIZE"><EM>NA</EM> </SPAN></TD>
</TR>
<TR><TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> 
		       </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> test_min.asc		</SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> min.asc 	  </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> </SPAN><SPAN CLASS="FOOTNOTESIZE"><EM>NA</EM> 	    </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> </SPAN><SPAN CLASS="FOOTNOTESIZE"><EM>NA</EM> </SPAN></TD>
</TR>
<TR><TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> 
</SPAN><SPAN CLASS="FOOTNOTESIZE"><B>anafast</B>  ana.par </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> test_cl.fits		</SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> cl_out.fits 	  </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> </SPAN><SPAN CLASS="FOOTNOTESIZE"><EM>NA</EM>	    </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> </SPAN><SPAN CLASS="FOOTNOTESIZE"><EM>NA</EM> </SPAN></TD>
</TR>
<TR><TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> 
</SPAN><SPAN CLASS="FOOTNOTESIZE"><B>&mdash;</B>  ana2maps.par </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> test_cl2maps.fits 	</SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> cl2maps.fits 	  </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> </SPAN><SPAN CLASS="FOOTNOTESIZE"><EM>NA</EM>	    </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> </SPAN><SPAN CLASS="FOOTNOTESIZE"><EM>NA</EM> </SPAN></TD>
</TR>
<TR><TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> 
</SPAN><SPAN CLASS="FOOTNOTESIZE"><B>&mdash;</B>  ana_w2.par </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> test_cl_w2.fits 	</SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> cl_w2.fits 	  </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> </SPAN><SPAN CLASS="FOOTNOTESIZE"><EM>NA</EM>	    </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> </SPAN><SPAN CLASS="FOOTNOTESIZE"><EM>NA</EM> </SPAN></TD>
</TR>
<TR><TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> 
</SPAN><SPAN CLASS="FOOTNOTESIZE"><B>alteralm</B>  alt.par </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> test_almdec.fits	</SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> almdec.fits 	  </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> </SPAN><SPAN CLASS="FOOTNOTESIZE"><EM>NA</EM>	    </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> </SPAN><SPAN CLASS="FOOTNOTESIZE"><EM>NA</EM> </SPAN></TD>
</TR>
<TR><TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> 
</SPAN><SPAN CLASS="FOOTNOTESIZE"><B>median_filter</B>  med.par </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> test_mf.fits	</SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> map_mf.fits	  </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> test_mf.gif    </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> map_mf.gif </SPAN></TD>
</TR>
<TR><TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> 
</SPAN><SPAN CLASS="FOOTNOTESIZE"><B>sky_ng_sim</B>   ngfs.par </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> test_ngfs.fits	</SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> map_ngfs.fits  </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> test_ngfs.gif  </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> map_ngfs.gif </SPAN></TD>
</TR>
<TR><TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> 
</SPAN><SPAN CLASS="FOOTNOTESIZE"><B>process_mask</B> prmask.par </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> test_distmask.fits	</SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> distmask.fits	</SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> test_distmask.gif </SPAN></TD>
<TD CLASS="LEFT"><SPAN CLASS="FOOTNOTESIZE"> distmask.gif </SPAN></TD>
</TR>
</TABLE><SPAN CLASS="FOOTNOTESIZE">

</SPAN></TD></TR>
</TABLE>
</DIV><P></P>
<BR>

<P>
<B>Notes:</B> 

<UL>
<LI>the input power spectrum (in <SPAN style="font-family:monospace">Healpix_3.80/test/cl.fits</SPAN>) used to generate the Fortran90 test maps
is currently the WMAP 1yr best fit, in <!-- MATH
 $(\mu{\mathrm{K}})^2$
 -->
<SPAN CLASS="MATH"><IMG
 STYLE="height: 2.45ex; vertical-align: -0.68ex; " SRC="installimg5.png"
 ALT="$(\mu{\mathrm{K}})^2$"></SPAN>, and is therefore different from the one
included in releases 1.* (that can still be found in <SPAN  CLASS="texttt">cl_old.fits</SPAN>).
</LI>
<LI>Other input fiducial <SPAN CLASS="MATH"><IMG
 STYLE="height: 2.33ex; vertical-align: -0.68ex; " SRC="installimg6.png"
 ALT="$C(\ell)$"></SPAN>, all in <!-- MATH
 $(\mu{\mathrm{K}})^2$
 -->
<SPAN CLASS="MATH"><IMG
 STYLE="height: 2.45ex; vertical-align: -0.68ex; " SRC="installimg5.png"
 ALT="$(\mu{\mathrm{K}})^2$"></SPAN> and defined on the multipole range 
<!-- MATH
 $[0, \ell_{\mathrm{max}}]$
 -->
<SPAN CLASS="MATH"><IMG
 STYLE="height: 2.33ex; vertical-align: -0.68ex; " SRC="installimg7.png"
 ALT="$[0, \ell_{\mathrm{max}}]$"></SPAN>, have been included for convenience in 
<A ID="tex2html40"
  HREF="https://healpix.sourceforge.io/src/3.80/test"><SPAN  CLASS="texttt">Healpix_3.80/test/</SPAN></A>
in a <strong>HEALPix</strong> compatible format.

<BR><TABLE class="PAD  BORDER" style="">
<TR><TD CLASS="LEFT"><B>File name</B></TD>
<TD CLASS="LEFT"><B>alias</B></TD>
<TD CLASS="LEFT"><B>Origin</B></TD>
<TD CLASS="LEFT"><!-- MATH
 $\ell_{\mathrm{max}}$
 -->
<SPAN CLASS="MATH"><IMG
 STYLE="height: 2.04ex; vertical-align: -0.45ex; " SRC="installimg8.png"
 ALT="$\ell_{\mathrm{max}}$"></SPAN></TD>
</TR>
<TR><TD CLASS="LEFT">wmap_lcdm_pl_model_yr1_v1.fits</TD>
<TD CLASS="LEFT">cl.fits</TD>
<TD CLASS="LEFT"><A ID="tex2html38"
  HREF="https://lambda.gsfc.nasa.gov/">WMAP</A>-1yr (2005)</TD>
<TD CLASS="LEFT">3000</TD>
</TR>
<TR><TD CLASS="LEFT">wmap_lcdm_sz_lens_wmap5_cl_v3.fits</TD>
<TD CLASS="LEFT">cl_wmap5.fits</TD>
<TD CLASS="LEFT">WMAP-5yr (2008)</TD>
<TD CLASS="LEFT">2000</TD>
</TR>
<TR><TD CLASS="LEFT">wmap_lcdm_sz_lens_wmap7_cl_v4.fits</TD>
<TD CLASS="LEFT">cl_wmap7.fits</TD>
<TD CLASS="LEFT">WMAP-7yr (2011)</TD>
<TD CLASS="LEFT">3726</TD>
</TR>
<TR><TD CLASS="LEFT">planck2013ext_lcdm_cl_v1.fits</TD>
<TD CLASS="LEFT">cl_planck1.fits</TD>
<TD CLASS="LEFT"><A ID="tex2html39"
  HREF="https://www.cosmos.esa.int/web/planck">Planck</A>
2013</TD>
<TD CLASS="LEFT">4500</TD>
</TR>
<TR><TD CLASS="LEFT">planck2015_lcdm_cl_v2.fits</TD>
<TD CLASS="LEFT">cl_planck2.fits</TD>
<TD CLASS="LEFT">Planck 2015</TD>
<TD CLASS="LEFT">4900</TD>
</TR>
<TR><TD CLASS="LEFT">planck2018_lcdm_cl_v3.fits</TD>
<TD CLASS="LEFT">cl_planck3.fits</TD>
<TD CLASS="LEFT">Planck 2018</TD>
<TD CLASS="LEFT">5000</TD>
</TR>
</TABLE>

<BR>
For more information on their respective origin and underlying model see their FITS header, or
<A ID="tex2html41"
  HREF="https://healpix.sourceforge.io/src/3.80/test/README"><SPAN  CLASS="texttt">Healpix_3.80/test/README</SPAN></A>.

<P>
</LI>
</UL>

<P>
In order to test the new <strong>HEALPix</strong> profile set-up one can then attempt
to run any C++ or F90 facility from any directory on your system. Similarly,
IDL, GDL or FL can be tested by invoking respectively 
<SPAN  CLASS="texttt">hidl</SPAN> (or <SPAN  CLASS="texttt">hidlde</SPAN>),  <SPAN  CLASS="texttt">hgdl</SPAN> (or <SPAN  CLASS="texttt">hgdlde</SPAN>), or <SPAN  CLASS="texttt">hfl</SPAN> (or <SPAN  CLASS="texttt">hflde</SPAN>).

<P>

<H2><A ID="SECTION540">
Cleaning up</A>
</H2>
Three levels of cleaning are available:
<PRE>
  make clean
</PRE>
will remove the intermediate files created during compilation, such as object
files, (Fortran) modules files, ... found in the source or build directories;
<PRE>
  make tidy
</PRE>
same as above, and will also remove the <strong>HEALPix</strong> executables, libraries and module and/or
include files;
<PRE>
  make distclean
</PRE>
will return the <strong>HEALPix</strong> directory to its original 'distribution' state by discarding the same
files as above, as well as the executable and library directories and the top
level Makefile.

<P>
As a consequence, <SPAN  CLASS="texttt">make clean</SPAN> can be used after a successful compilation and installation in order to remove now useless intermediate files while keeping the codes functional, 
while
<SPAN  CLASS="texttt">make tidy</SPAN> should be used between consecutive (failed) attempts with different compilers, compiler versions or compiler options, to avoid any conflict between new and pre-existing files.

<P>

<H2><A ID="SECTION550">
Linking a code with <strong>HEALPix</strong> library</A>
</H2>
Third party or user-developed codes may require <strong>HEALPix</strong> as an external library.
An easy way to achieve this linking is to use the <SPAN  CLASS="texttt">pkg-config</SPAN> facility 
(now available on many systems, including Linux, Unix*, MacOS and MS Windows),
following the procedure described in &sect;<A HREF="#sec:pkg-config">6</A> on <A HREF="#install:pkg-config"><SPAN  CLASS="texttt">pkg-config</SPAN></A>.

<P>

<H1><A ID="SECTION600">
A Note on <I>Re</I>-installation</A>
</H1>

<P>
As a result of the line added to your shell profile which explicitly
sources the <strong>HEALPix</strong> profile, care must be taken if the package 
is reinstalled in a different directory. If such reinstallation
is desired, the included line must be removed from your system profile,
allowing the corrected version to be added.  

<P>

<H1><A ID="SECTION700"></A>
<A ID="sec:pkg-config"></A><A ID="install:pkg-config"></A>
<BR>
Pkg-config files
</H1>
Starting with <strong>HEALPix</strong> 3.12, <SPAN  CLASS="texttt">pkg-config</SPAN> (<SPAN  CLASS="texttt">.pc</SPAN>) files are generated
during the configuration of the 
<A HREF="#install:libsharp:config">libsharp</A>, 
<A HREF="#install:C:config">C</A>, 
<A HREF="#install:cpp_config">C++</A> and 
<A HREF="#install:f90:config">F90</A> packages, and are initially located respectively in
<SPAN  CLASS="texttt">${HEALPIX}/lib/pkgconfig/libsharp.pc</SPAN>,
<SPAN  CLASS="texttt">${HEALPIX}/lib/pkgconfig/chealpix.pc</SPAN>,
<SPAN  CLASS="texttt">${HEALPIX}/lib/pkgconfig/healpix_cxx.pc</SPAN>,
and 
<BR><SPAN  CLASS="texttt">${HEALPIX}/lib</SPAN><EM>suffix</EM><SPAN  CLASS="texttt">/pkgconfig/healpix.pc</SPAN>.

<P>
If the 
<A ID="tex2html44"
  HREF="https://en.wikipedia.org/wiki/Pkg-config"><SPAN  CLASS="texttt">pkg-config</SPAN> software</A>
is available on your system (see 
<kbd><A ID="tex2html42"
  HREF="https://www.freedesktop.org/wiki/Software/pkg-config/">https://www.freedesktop.org/wiki/Software/pkg-config/</A></kbd> to download, install and
use it) and if the location of
the <strong>HEALPix</strong> <SPAN  CLASS="texttt">pkg-config</SPAN> files above are known to it (either by moving/copying them
to one of the standard locations returned by 
<BR><SPAN  CLASS="texttt">pkg-config -&ndash;variable=pc_path pkg-config</SPAN>
<BR>
or by customizing the environment variable <SPAN  CLASS="texttt">PKG_CONFIG_PATH</SPAN><A ID="tex2html43"
  HREF="installfootnode.htm#foot2074"><SUP><SPAN CLASS="arabic">3</SPAN></SUP></A>), 
then linking your own or third-party code with the 
C,
C++,
F90 <strong>HEALPix</strong> library simply becomes 
<BR><SPAN  CLASS="texttt">cc `pkg-config -&ndash;cflags -&ndash;libs chealpix` mycode.c -o mycode</SPAN> 
<BR><SPAN  CLASS="texttt">c++ `pkg-config -&ndash;cflags -&ndash;libs healpix_cxx` mycode.cpp -o mycode</SPAN> 
<BR><EM>FC</EM> <SPAN  CLASS="texttt"> `pkg-config -&ndash;cflags -&ndash;libs healpix` mycode.f90 -o mycode</SPAN>
<BR>(where <EM>FC</EM> has to be replaced by the Fortran compiler used to generate the
<strong>HEALPix</strong> library).

<P>

<H1><A ID="SECTION800"></A>
<A ID="sec:troubleshoot"></A>
<BR>
Troubleshooting and further information
</H1>
This section contains a list of difficulties which we have dealt
with. It is by no means exhaustive. 
In case of problems, see <kbd><A ID="tex2html45"
  HREF="https://healpix.sourceforge.io/support.php">https://healpix.sourceforge.io/support.php</A></kbd> or contact <EM>healpix-support</EM> <SPAN  CLASS="texttt">at</SPAN> <EM>lists.sourceforge.net</EM>

<P>

<H2><A ID="SECTION810"></A>
<A ID="sec:freef90compilers"></A>
<BR>
Free Fortran90/95 Compilers
</H2>
Some <B>free</B> Fortran90/95 compilers that can be used to compile <strong>HEALPix</strong> are listed below.
They all support the few Fortran 2003 features used in <strong>HEALPix</strong>. 
    
<UL>
<LI><B>Intel Fortran</B> compiler (<SPAN  CLASS="texttt">ifort</SPAN>) for Linux based computers (versions
11.* to 19.*<A ID="tex2html46"
  HREF="installfootnode.htm#foot2075"><SUP><SPAN CLASS="arabic">4</SPAN></SUP></A>) 
<BR>         <kbd><A ID="tex2html47"
  HREF="https://software.intel.com/en-us/fortran-compilers">https://software.intel.com/en-us/fortran-compilers</A></kbd>        
</LI>
<LI><B>GNU Fortran 95</B> compiler (<SPAN  CLASS="texttt">gfortran</SPAN>) included in GNU Compiler Collection <EM>GCC</EM> version 4.0.0
         and up and available for Linux, Mac OSX, Windows, Sun ... platforms
         
<BR>          <kbd><A ID="tex2html48"
  HREF="https://www.gnu.org/software/gcc/fortran/">https://www.gnu.org/software/gcc/fortran/</A></kbd>. 
<BR>
GFortran binaries for all platforms can also be downloaded from  
<BR>          <kbd><A ID="tex2html49"
  HREF="https://gcc.gnu.org/wiki/GFortranBinaries">https://gcc.gnu.org/wiki/GFortranBinaries</A></kbd>. 
<BR>
Please note that only recent versions of <SPAN  CLASS="texttt">gfortran</SPAN> (Aug 2005
         and later) compile <strong>HEALPix</strong> correctly, and v4.2.1 and more have given satisfying
         results so far, including native OpenMP support.
</LI>
<LI><B>Nvidia's LLVM-based Fortran</B> compiler (<SPAN  CLASS="texttt">flang</SPAN>) available as pre-compiled executables and libraries for Linux 
<BR><kbd><A ID="tex2html50"
  HREF="https://www.scivision.co/flang-compiler-build-tips">https://www.scivision.co/flang-compiler-build-tips</A></kbd> 
<BR>
and as source files for all platforms 
<BR><kbd><A ID="tex2html51"
  HREF="https://github.com/flang-compiler/flang/wiki/Building-Flang">https://github.com/flang-compiler/flang/wiki/Building-Flang</A></kbd>.
</LI>
<LI><B>Nvidia's PGI Fortran</B> (formerly Portland Group) compilers (<SPAN  CLASS="texttt">pgf90</SPAN>) available as freemium (without support) or commercially for Linux, Mac OSX and Windows from 

<BR><kbd><A ID="tex2html52"
  HREF="https://www.pgroup.com/index.htm">https://www.pgroup.com/index.htm</A></kbd>.
</LI>
<LI><B>G95</B> compiler available for Linux, Mac OSX, Windows, Sun and HP platforms with 32 and 64 bit architectures (eg, x86 and x86-64). In the latter case, the '32bit default integer' (32bit DI) version of <SPAN  CLASS="texttt">g95</SPAN> <EM>must</EM> be used. Note that this compiler was last released in 2013, and it generally generates slower codes 
than the compilers listed above.
         
<BR><kbd><A ID="tex2html53"
  HREF="http://www.g95.org">http://www.g95.org</A></kbd>
</LI>
</UL>
See <kbd><A ID="tex2html54"
  HREF="http://fortranwiki.org/fortran/show/Compilers">http://fortranwiki.org/fortran/show/Compilers</A></kbd> for an extended list of free, freemium and commercial Fortran compilers.

<P>

<H2><A ID="SECTION820"></A>
<A ID="sec:windows"></A>
<BR>
Installation under Microsoft Windows
</H2>
Detailed instructions to install <strong>HEALPix</strong> on Windows 7 using Cygwin, kindly provided by John Arballo, 
are available in &sect;<A HREF="#sec:windows_seven">7.2.1</A>, 
while other configurations are discussed in &sect;<A HREF="#sec:windows_other">7.2.2</A>.

<H3><A ID="SECTION821"></A>
<A ID="sec:windows_seven"></A>
<BR>
Installation on Windows 7 with Cygwin
</H3>
The three steps (installation of Cygwin, cfitsio and <strong>HEALPix</strong> respectively) must be done in that order.

<P>
<SPAN  CLASS="textbf">A: Install Cygwin</SPAN>

<OL>
<LI>Go to <kbd><A ID="tex2html55"
  HREF="https://www.cygwin.com/">https://www.cygwin.com/</A></kbd>and click on `Install Cygwin' in the menu on the left.

<P>
</LI>
<LI>Click on <SPAN  CLASS="texttt">setup-x86.exe</SPAN> (for 32-bit installation) or 
<SPAN  CLASS="texttt">setup-x86_64.exe</SPAN>
(for 64-bit installation) and then `Save File' when prompted.

<P>
</LI>
<LI>Go to your Downloads folder (or wherever you saved setup-x86*.exe) and
double-click on the <SPAN  CLASS="texttt">setup-x86*.exe</SPAN> file to run it.

<P>
</LI>
<LI>Accept all defaults, except:

<P>

<OL>
<LI>You have to `Choose A Download Site'. (eg:
  <kbd><A ID="tex2html56"
  HREF="https://ftp.gtlib.gatech.edu">https://ftp.gtlib.gatech.edu</A></kbd>).
</LI>
<LI>When prompted to `Select Packages', expand `Default' (if you see a `+'
  to the left of it), expand `Devel', then find and add the following
  packages (click on `Skip' for each of them so it changes to the
  version number and a checkbox appears in the `Bin' column):
<BR> <kbd>  &nbsp;&nbsp;&nbsp;&nbsp; gcc-core &nbsp;&nbsp;&nbsp;&nbsp; </kbd> 
<BR> <kbd>  &nbsp;&nbsp;&nbsp;&nbsp; gcc-fortran &nbsp;&nbsp;&nbsp;&nbsp; </kbd> 
<BR> <kbd>  &nbsp;&nbsp;&nbsp;&nbsp; gcc-g++ &nbsp;&nbsp;&nbsp;&nbsp; </kbd> 
<BR> <kbd>  &nbsp;&nbsp;&nbsp;&nbsp; make &nbsp;&nbsp;&nbsp;&nbsp; </kbd> 
</LI>
</OL>
</LI>
</OL>
&nbsp; The installation will take a few minutes.

<P>
<SPAN  CLASS="textbf">B: Install CFITSIO Library</SPAN>

<OL>
<LI>Get the latest source code package from NASA's HEASARC website
  (<kbd><A ID="tex2html57"
  HREF="https://heasarc.gsfc.nasa.gov/FTP/software/fitsio/c/cfitsio_latest.tar.gz">https://heasarc.gsfc.nasa.gov/FTP/software/fitsio/c/cfitsio_latest.tar.gz</A></kbd>).
  When prompted to save the file, in the Save dialog window, navigate to
  <SPAN  CLASS="texttt">C:&#92;cygwin64&#92;usr&#92;local</SPAN>
  (assuming you accepted the defaults when installing Cygwin), click on
  `New folder' and&nbsp; name it `src', go into that folder and `Save'.
</LI>
<LI>Open a Cygwin terminal (via the new Desktop icon or through your Start
  menu).
</LI>
<LI>Enter the following commands at the '<SPAN  CLASS="textbf">$</SPAN>' prompt:
<BR>  <kbd>  &nbsp;&nbsp;&nbsp;&nbsp; <SPAN  CLASS="textbf">$</SPAN> cd /usr/local/src &nbsp;&nbsp;&nbsp;&nbsp; </kbd> 
<BR>  <kbd>  &nbsp;&nbsp;&nbsp;&nbsp; <SPAN  CLASS="textbf">$</SPAN> tar zxvf cfitsio_latest.tar.gz &nbsp;&nbsp;&nbsp;&nbsp; </kbd> 
<BR>  <kbd>  &nbsp;&nbsp;&nbsp;&nbsp; <SPAN  CLASS="textbf">$</SPAN> cd cfitsio &nbsp;&nbsp;&nbsp;&nbsp; </kbd> 
<BR>  <kbd>  &nbsp;&nbsp;&nbsp;&nbsp; <SPAN  CLASS="textbf">$</SPAN> ./configure -&ndash;prefix=/usr &nbsp;&nbsp;&nbsp;&nbsp; </kbd> 
<BR>  <kbd>  &nbsp;&nbsp;&nbsp;&nbsp; <SPAN  CLASS="textbf">$</SPAN> make &nbsp;&nbsp;&nbsp;&nbsp; </kbd> 
<BR>  <kbd>  &nbsp;&nbsp;&nbsp;&nbsp; <SPAN  CLASS="textbf">$</SPAN> make install &nbsp;&nbsp;&nbsp;&nbsp; </kbd> 
<BR>  <kbd>  &nbsp;&nbsp;&nbsp;&nbsp; <SPAN  CLASS="textbf">$</SPAN> cd ../ &nbsp;&nbsp;&nbsp;&nbsp; </kbd> 
</LI>
<LI>Leave the Cygwin terminal open.
</LI>
</OL>

<P>
<SPAN  CLASS="textbf">C: Install HEALPix</SPAN>

<OL>
<LI>Get the latest version of HEALPix from SourceForge
  (<kbd><A ID="tex2html58"
  HREF="https://sourceforge.net/projects/healpix/files/latest/download">https://sourceforge.net/projects/healpix/files/latest/download</A></kbd>). When
  prompted to save the file, save it in
  <SPAN  CLASS="texttt">C:&#92;cygwin64&#92;usr&#92;local&#92;src</SPAN>.
</LI>
<LI>In Windows Explorer, navigate to
  C:&#92;cygwin64&#92;usr&#92;local&#92;src,
  right-click on <SPAN  CLASS="texttt">Healpix_3.80_*.zip</SPAN> and `Extract all...'. Accept the
  default location.
</LI>
<LI>In the Cygwin terminal, type the following commands at the
  '<SPAN  CLASS="textbf">$</SPAN>' prompt
<BR>(use the names of the Healpix directories for
  the version you installed):
<BR>	<kbd>  &nbsp;&nbsp;&nbsp;&nbsp; <SPAN  CLASS="textbf">$</SPAN> cd Healpix_3.80_* &nbsp;&nbsp;&nbsp;&nbsp; </kbd> 
<BR>	<kbd>  &nbsp;&nbsp;&nbsp;&nbsp; <SPAN  CLASS="textbf">$</SPAN> cd Healpix_3.80 &nbsp;&nbsp;&nbsp;&nbsp; </kbd> 
<BR>	<kbd>  &nbsp;&nbsp;&nbsp;&nbsp; <SPAN  CLASS="textbf">$</SPAN> ./configure &nbsp;&nbsp;&nbsp;&nbsp; </kbd> 
<BR>
Select an option from the menu (e.g., `2' for the C
  package) and accept all of the defaults except that
  the first time
  you run configure, you'll be prompted at the end to modify your
  home shell profile ('.profile'). Enter `y' at this prompt.
<BR><kbd>  &nbsp;&nbsp;&nbsp;&nbsp; <SPAN  CLASS="textbf">$</SPAN> make &nbsp;&nbsp;&nbsp;&nbsp; </kbd> 
<BR>	<kbd>  &nbsp;&nbsp;&nbsp;&nbsp; <SPAN  CLASS="textbf">$</SPAN> make test &nbsp;&nbsp;&nbsp;&nbsp; </kbd> 
<BR>	<kbd>  &nbsp;&nbsp;&nbsp;&nbsp; <SPAN  CLASS="textbf">$</SPAN> make tidy &nbsp;&nbsp;&nbsp;&nbsp; </kbd> 
</LI>
</OL>

<P>

<H3><A ID="SECTION822"></A>
<A ID="sec:windows_other"></A>
<BR>
Other Windows configurations
</H3>
Installation on Windows versions other than 7 should be very similar to the one detailed above.
<BR>
In step A above, replacing Cygwin with <B>MinGW</B> (<kbd><A ID="tex2html59"
  HREF="http://www.mingw.org/">http://www.mingw.org/</A></kbd>) 
together with the MSYS collection of GNU utilities 
(see <kbd><A ID="tex2html60"
  HREF="http://www.mingw.org/wiki/msys">http://www.mingw.org/wiki/msys</A></kbd> and
<kbd><A ID="tex2html61"
  HREF="https://sourceforge.net/projects/mingw/files">https://sourceforge.net/projects/mingw/files</A></kbd>) is also possible.
The Unix/Linux tools required include <SPAN  CLASS="texttt">sh, make, awk, grep, sed, ls, wc, cat, more, nm, ar</SPAN>,
as well as C, C++ and Fortran compilers.
<BR>
The latest <SPAN  CLASS="texttt">gfortran</SPAN> binaries for Cygwin and/or MinGW can be found at, eg
<kbd><A ID="tex2html62"
  HREF="https://cygwin.com/cgi-bin2/package-grep.cgi?grep=gcc-fortran&amp;arch=x86_64">https://cygwin.com/cgi-bin2/package-grep.cgi?grep=gcc-fortran&amp;arch=x86_64</A></kbd>,
following the tips found at 
<kbd><A ID="tex2html63"
  HREF="https://gcc.gnu.org/wiki/GFortranBinaries">https://gcc.gnu.org/wiki/GFortranBinaries</A></kbd>.

<P>

<H2><A ID="SECTION830">
Problems with CFITSIO</A>
</H2>

<H3><A ID="SECTION831">
Compilation of CFITSIO Fortran wrappers</A>
</H3>
The most common problem with the Fortran <strong>HEALPix</strong> compilation will produce
messages like:
<PRE>
  ld: Undefined symbols:
   _ftbnfm_
   _ftclos_
   _ftcrhd_
   _ftdkey_
   ...
</PRE>
or
<PRE>
  fitstools.f90: undefined reference to `ftdkey_'
  fitstools.f90: undefined reference to `ftbnfm_'
  fitstools.f90: undefined reference to `ftclos_'
  ...
</PRE>
or
<PRE>
 Undefined symbols:
  "_ftghbn_", referenced from:
      ___fitstools_MOD_read_fits_cut4.clone.2 in libhealpix.a(fitstools.o)
      ___fitstools_MOD_getsize_fits.clone.1 in libhealpix.a(fitstools.o)
      ___fitstools_MOD_getsize_fits in libhealpix.a(fitstools.o)
   ...
 ld: symbol(s) not found
 collect2: ld returned 1 exit status
</PRE>
and occurs when the CFITSIO installation script could not find a valid fortran compiler.
<BR>
To solve this problem

<OL>
<LI>Go into the CFITSIO directory. 
<BR>
Assuming that <B>ifort</B> is available on your
system (it can be replaced below by <SPAN  CLASS="texttt"><B>gfortran</B></SPAN>, <SPAN  CLASS="texttt"><B>g95</B></SPAN>, <SPAN  CLASS="texttt"><B>f77</B></SPAN>, <SPAN  CLASS="texttt"><B>f2c</B></SPAN>, <SPAN CLASS="MATH"><IMG
 STYLE="height: 0.23ex; vertical-align: -0.10ex; " SRC="installimg4.png"
 ALT="$\ldots$"></SPAN>) type: 
<BR><kbd>  &nbsp;&nbsp;&nbsp;&nbsp; ./configure FC=<B>ifort</B> &nbsp;&nbsp;&nbsp;&nbsp; </kbd>  
<BR><kbd>  &nbsp;&nbsp;&nbsp;&nbsp; make &nbsp;&nbsp;&nbsp;&nbsp; </kbd>  
<BR><kbd>  &nbsp;&nbsp;&nbsp;&nbsp; make install &nbsp;&nbsp;&nbsp;&nbsp; </kbd>  (optional).
</LI>
<LI>Then go back into the <strong>HEALPix</strong> directory and do 
<BR><kbd>  &nbsp;&nbsp;&nbsp;&nbsp; ./configure &nbsp;&nbsp;&nbsp;&nbsp; </kbd>  (making sure that you are using the newly created <SPAN  CLASS="texttt">libcfitsio.a</SPAN> library) 
<BR><kbd>  &nbsp;&nbsp;&nbsp;&nbsp; make &nbsp;&nbsp;&nbsp;&nbsp; </kbd>  
<BR><kbd>  &nbsp;&nbsp;&nbsp;&nbsp; make test &nbsp;&nbsp;&nbsp;&nbsp; </kbd> 
</LI>
</OL>
See also the note below on 64 bit architectures.

<P>

<H3><A ID="SECTION832">
CFITSIO problems on systems with 64 bit architecture</A>
</H3>

<P>

<OL>
<LI><B>Linux, Mac OS X</B>

<P>
If the <strong>HEALPix</strong> codes are compiled in 64 bits, and the GNU C Compiler (<SPAN style="font-family:monospace">gcc</SPAN>) is used to compiled CFITSIO, then issue the following commands in the
CFITSIO directory:

<P>
<PRE>
  ./configure FC='gcc -m64'
  make
</PRE>

<P>
You can
then force compilation to the same binary format by entering
<SPAN  CLASS="texttt">-m64</SPAN> when asked for the optimisation options in the
<strong>HEALPix</strong> configure script.

<P>
</LI>
<LI><B>IRIX64</B>

<P>
On a 64-bit architecture such as IRIX64, CFITSIO will have to be
compiled in the same  binary format as the <strong>HEALPix</strong> codes.
This can be achieved by typing the
following on the
command line in the CFITSIO directory:

<P>
<PRE>
  rm config.cache    
  setenv CC 'cc -n32'
  ./configure
  make
</PRE>

<P>
Alternatively you can replace the <SPAN  CLASS="texttt">-n32</SPAN> with <SPAN  CLASS="texttt">-64</SPAN>. You can
then force compilation to the same binary format by entering either
<SPAN  CLASS="texttt">-n32</SPAN> or <SPAN  CLASS="texttt">-64</SPAN> when asked for the optimisation options in the
<strong>HEALPix</strong> configure script.
</LI>
</OL>

<P>

<H3><A ID="SECTION833">
CFITSIO linking problems</A>
</H3>

<P>
A particular problem encountered with the CFITSIO Version 2.0 release relates
to the inclusion of various libraries within the system release for a given
machine. This led to some modifications to the Makefile to include the specific
library links <SPAN  CLASS="texttt">-lm -lnsl -lsocket</SPAN> on SunOS, but only <SPAN  CLASS="texttt">-lm</SPAN> for IRIX64.
If your OS is not completely supported by the distribution, you may find this
as one source of errors. The CFITSIO developers recommend compilation of the
<SPAN  CLASS="texttt">testprog</SPAN> routine. Inspection of the libraries linked after executing the
<SPAN  CLASS="texttt">make testprog</SPAN> statement will reveal those you need to include in the
Makefile.

<P>

<H3><A ID="SECTION834">
CFITSIO and Debian/Linux</A>
</H3>
Some problems have been reported on Debian/Linux systems during the
linking to the CFITSIO library shipped with Linux. If these problems
occur, try to recompile the CFITSIO library from scratch before linking
to <strong>HEALPix</strong>.

<P>

<H3><A ID="SECTION835"></A>
<A ID="install:curl"></A>
<BR>
CFITSIO and <SPAN  CLASS="texttt">libcurl</SPAN>
</H3>
Starting with version 3.42, CFITSIO is by default linked with the 
curl library (<kbd><A ID="tex2html64"
  HREF="https://curl.haxx.se/libcurl">https://curl.haxx.se/libcurl</A></kbd>,
used to read remote FITS files via https) whenever it is available.
This shared or dynamic library is pretty standard on modern systems, 
and often located in <SPAN  CLASS="texttt">/usr/lib</SPAN> or <SPAN  CLASS="texttt">/usr/lib64</SPAN>, and the command <SPAN  CLASS="texttt">curl-config</SPAN> 
can be used to determine its location.
In this case, when executing the <strong>HEALPix</strong>  code, 
the system must know where to find this library at runtime as explained for instance 
<A ID="tex2html65"
  HREF="https://amir.rachum.com/blog/2016/09/17/shared-libraries/#debugging-cheat-sheet">here</A>
for Linux/Unix or 
<A ID="tex2html66"
  HREF="https://developer.apple.com/library/archive/documentation/DeveloperTools/Conceptual/DynamicLibraries/100-Articles/UsingDynamicLibraries.html">there</A>
for MacOSX.

<P>

<H3><A ID="SECTION836"></A>
<A ID="install:heasoft"></A>
<BR>
CFITSIO from Heasoft
</H3>
The Heasoft suite of software packages for High Energy Astrophysics, 
also hosted at HEASARC and available as source files or precompiled binaries, 
includes a cfitsio library and its header files.
However, trying to link <strong>HEALPix</strong> to that installation of cfitsio will generally fail, because

<UL>
<LI>the <EM>precompiled</EM> cfitsio library may not be properly detected during the configuration of 
<strong>HEALPix</strong> (in C, C++ and F90),
</LI>
<LI>the Heasoft header files 
<SPAN  CLASS="texttt">rotmatrix.h</SPAN> and 
<SPAN  CLASS="texttt">pointing.h</SPAN> found in 
<SPAN  CLASS="texttt">${HEADAS}/include</SPAN> (like
<SPAN  CLASS="texttt">fitsio.h</SPAN>) will conflict with the ones provided in 
<SPAN  CLASS="texttt">${HEALPIX}/src/cxx/cxxsupport</SPAN>,
preventing the compilation of <strong>HEALPix</strong> C++ routines.
</LI>
</UL>
It is therefore recommended to link <strong>HEALPix</strong> to a cfitsio library compiled 
locally and <EM>not</EM> included in Heasoft.
<BR>
If Heasoft's cfitsio is to be used, 
Heasoft must have been compiled locally from source files,
and the paths provided during the <strong>HEALPix</strong> configuration must be
<SPAN  CLASS="texttt">FITSDIR=${HEADAS}/../heacore/</SPAN>PLATFORM<SPAN  CLASS="texttt">/lib</SPAN> and
<SPAN  CLASS="texttt">FITSINC=${HEADAS}/../heacore/</SPAN>PLATFORM<SPAN  CLASS="texttt">/include</SPAN>
(<SPAN  CLASS="textit">instead</SPAN> of the expected 
<SPAN  CLASS="texttt">FITSDIR=${HEADAS}/lib</SPAN> and
<SPAN  CLASS="texttt">FITSINC=${HEADAS}/include</SPAN>)
where PLATFORM depends on your computer and operating system and may look like <SPAN  CLASS="texttt">x86_64-pc-linux-gnu-libc2.29</SPAN>.

<P>

<H2><A ID="SECTION840">
<SPAN  CLASS="texttt">diff</SPAN> shows that the test files are different from
the supplied files</A>
</H2>

<P>
This by itself is no cause for concern. When comparing using a
<SPAN  CLASS="texttt">diff </SPAN> on the test files will most likely report a
difference even when the installation has been successful. 
This  may be due to the fact that
different installations  have different floating point
representations. Also, the FITS files carry date information.

<P>

<H2><A ID="SECTION850">
Try <SPAN  CLASS="texttt">unlimit</SPAN></A>
</H2>

<P>
If you have unforeseen problems at runtime, try <SPAN  CLASS="texttt">unlimit</SPAN> (under csh or tcsh) or <SPAN  CLASS="texttt">ulimit</SPAN> (under sh or bash), in order to increase the heap and stack memory size. It
sometimes helps.

<P>

<H2><A ID="SECTION860">
<SPAN  CLASS="texttt">hidl</SPAN> usage</A>
</H2>

<P>
We have found that in very rare cases the alias <SPAN  CLASS="texttt">hidl</SPAN>
is not recognised by the user's system. Usually, this is related
to the local system's IDL script. A quick-fix is achieved
by setting the environment variable <SPAN  CLASS="texttt">IDL_STARTUP</SPAN> to be
equal to the <strong>HEALPix</strong> startup file <SPAN  CLASS="texttt">HEALPix_startup</SPAN>
<B>including</B> the directory path to the file. This enables
the user to access the <strong>HEALPix</strong> IDL procedures simply by invoking
IDL. For example, in the typical installation documented
above for a user running the tcsh shell, the command 
<BR><SPAN  CLASS="texttt">setenv IDL_STARTUP
/disk1/user1/HEALPix_3.80/src/idl/HEALPix_startup</SPAN>

<BR>
should be issued (or added to the user's shell profile).

<P>
If the user already has an IDL startup file, then
this should be merged with <SPAN  CLASS="texttt">HEALPix_startup</SPAN>. This temporary
solution does mean that the <strong>HEALPix</strong> IDL procedures are available
in the <SPAN  CLASS="texttt">IDL_PATH</SPAN> at all times, which may lead to conflicts with
user-defined procedures. The <SPAN  CLASS="texttt">hidl</SPAN> invocation was intended 
to circumvent these issues, allowing <strong>HEALPix</strong> IDL procedures to
be available only when desired.

<P>
A proper fix requires the user to ask the local system
administrator to adjust the local IDL script.

<P>

<H2><A ID="SECTION870">
Using <strong>HEALPix</strong> IDL together with other IDL libraries</A>
</H2>
See the <A HREF="./idl_Using_HEALPix_IDL_facilitie.htm#idl:other_idl_libs">homonymous section</A> in the <A ID="tex2html67"
  HREF="idl.htm">"IDL Facilities Overview"</A>
<P>

<H2><A ID="SECTION880"></A>
<A ID="install:macos_idl_cursor"></A>
<BR>
Mac OS X,  X11 and IDL cursor
</H2>
If the IDL cursor does not work correctly on X11 windows under Mac OS X, and the
2nd and 3rd button clicks are ineffective, 
type

<UL>
<LI>with Apple's X11:

<UL>
<LI>under Tiger (10.4.*): 
<BR> <SPAN  CLASS="texttt">defaults write com.apple.x11 wm_click_through -bool true</SPAN>
</LI>
<LI>under Leopard (10.5.*), Snow Leopard (10.6.*) and Lion (10.7.*): 
<BR> <SPAN  CLASS="texttt">defaults write org.x.x11 wm_click_through -bool true</SPAN>
</LI>
</UL>
</LI>
<LI>with Xquartz (default under Moutain Lion (10.8.*), Mavericks (10.9.*) and Yosemite (10.10.*), 
available for download for 
El Capitan (10.11.*), Sierra (10.12.*), High Sierra (10.13.*), Mojave (10.14.*), Catalina (10.15.*) and Big Sur (11.0.*)):
<BR><SPAN  CLASS="texttt">defaults write org.macosforge.xquartz.X11 wm_click_through -bool true</SPAN>
</LI>
<LI>with MacPort's X11 (package xorg-server):
<BR><SPAN  CLASS="texttt">defaults write org.macports.X11 wm_click_through -bool true</SPAN>
</LI>
</UL>
at your X11 prompt and restart X11.
<BR>
Note that the command <SPAN  CLASS="texttt">ls -lrt  $HOME/Library/Preferences/*[xX]11*plist</SPAN> 
can be used to determine the X window system installed on
your Mac.
See also <kbd><A ID="tex2html68"
  HREF="http://www.idlcoyote.com/misc_tips/maccursor.html">http://www.idlcoyote.com/misc_tips/maccursor.html</A></kbd> and
<A HREF="./idl_mollcursor.htm#idl:mollcursor"><SPAN  CLASS="texttt">mollcursor</SPAN></A> documentation in <A ID="tex2html69"
  HREF="idl.htm">"IDL
Facilities"</A>).

<P>

<H2><A ID="SECTION890"></A>
<A ID="sec:using_gdl"></A><A ID="install:using_gdl"></A><A ID="install:using_gdl"></A>
<BR>
Using GDL instead of IDL
</H2>

<P>
GNU Data Language (GDL), is a <EM>free</EM> clone of IDL 7.1, with support for some IDL 8.0 features (for more information see
<kbd><A ID="tex2html70"
  HREF="https://github.com/gnudatalanguage/gdl">https://github.com/gnudatalanguage/gdl</A></kbd>).
Both the source code and precompiled executables for various platforms are available.

<P>
When used to run IDL-Healpix routines, GDL 1.0.0rc3 or more gives
very satisfactory results<A ID="tex2html71"
  HREF="installfootnode.htm#foot2101"><SUP><SPAN CLASS="arabic">5</SPAN></SUP></A>. 
The calculations agree with those done under IDL, with
comparable computation times, but a few minor features, mostly related to the font selection, are missing.

<P>

<H3><A ID="SECTION891">
GDL+<strong>HEALPix</strong> specific requirements</A>
</H3>
To fully enjoy GDL capabilities

<UL>
<LI><strong>HEALPix</strong> 3.80 or more must be installed
</LI>
<LI>Besides the mandatory requirements (<A ID="tex2html73"
  HREF="https://plplot.sourceforge.net/source/index.html"><SPAN  CLASS="texttt">plplot</SPAN></A>, 
<A ID="tex2html74"
  HREF="https://www.gnu.org/software/gsl"><SPAN  CLASS="texttt">gsl</SPAN></A>, 
<A ID="tex2html75"
  HREF="https://ftp.gnu.org/pub/gnu/readline/"><SPAN  CLASS="texttt">readline</SPAN></A>
and 
<A ID="tex2html76"
  HREF="https://www.zlib.net/"><SPAN  CLASS="texttt">zlib</SPAN></A>) 
GDL must also have been (pre-)compiled with links to

<UL>
<LI><A ID="tex2html77"
  HREF="https://www.imagemagick.org"><SPAN  CLASS="texttt">ImageMagick</SPAN></A>
(or <A ID="tex2html78"
  HREF="http://www.graphicsmagick.org/"><SPAN  CLASS="texttt">GraphicsMagick</SPAN></A>) 
to produce GIF, JPEG and PNG output files, and
</LI>
<LI><A ID="tex2html79"
  HREF="http://pslib.sourceforge.net"><SPAN  CLASS="texttt">pslib</SPAN></A>
(recommended, but not required) 
to produce PostScript and PDF files (in the latter case,
a recent version of <A ID="tex2html80"
  HREF="https://www.ghostscript.com/"><SPAN  CLASS="texttt">ghostscript</SPAN></A>, i.e. 9.07 or more, is also recommended).
</LI>
</UL>

<P>
</LI>
</UL>

<P>

<H3><A ID="SECTION892">
Impact of GDL limitations on <strong>HEALPix</strong> </A>
</H3>

<UL>
<LI>When run under GDL 1.0.0rc3, and if the requirements stated above are met, 
the visualization routines
<A HREF="./idl_mollview.htm#idl:mollview"><SPAN  CLASS="texttt">azeqview</SPAN>, <SPAN  CLASS="texttt">cartview</SPAN>, <SPAN  CLASS="texttt">gnomview</SPAN>, <SPAN  CLASS="texttt">mollview</SPAN> and <SPAN  CLASS="texttt">orthview</SPAN></A> 
will produce correct screen (X) outputs and PS, PDF, PNG, GIF, and JPEG images, with the following caveat(s):

<UL>
<LI>the <A HREF="./idl_mollview.htm#idl:mollview:pfonts"><SPAN  CLASS="texttt">pfonts</SPAN></A> keyword will not allow the selection of other fonts than Hershey vectorial fonts (pfonts[0]=-1).
</LI>
</UL>
All other features work properly, including the <A HREF="./idl_mollview.htm#idl:mollview:latex"><SPAN  CLASS="texttt">Latex</SPAN></A> keyword.

<P>
</LI>
</UL>

<P>

<H2><A ID="SECTION8100"></A>
<A ID="sec:using_fl"></A><A ID="install:using_fl"></A><A ID="install:using_fl"></A>
<BR>
Using FL instead of IDL
</H2>
Fawlty Language (FL) is a black-box implementation of IDL 8.0, for which precompiled self-contained packages
are available for Linux, Windows, MacOSX and more from 
<kbd><A ID="tex2html81"
  HREF="https://www.flxpert.hu/fl">https://www.flxpert.hu/fl</A></kbd>.

<P>
Most of the IDL routines and features have been implemented, with a few exceptions 
(like <SPAN  CLASS="texttt">xloadct</SPAN>) and the restrictions listed below.

<P>

<H3><A ID="SECTION8101">
FL+<strong>HEALPix</strong> specific requirements</A>
</H3>
To fully enjoy FL capabilities

<UL>
<LI><strong>HEALPix</strong> 3.80 or more must be installed,
</LI>
<LI>the version 0.79.49 or more of FL must be used,
</LI>
<LI>it is recommended to set the environment variable <SPAN  CLASS="texttt">FL_DIR</SPAN> to the FL top directory (ie <EM>path</EM><SPAN  CLASS="texttt">/fl/fl_0.79.49 </SPAN>in Linux and Windows, and <EM>path</EM><SPAN  CLASS="texttt">/fl.app</SPAN> in MacOSX) 
in order for the <strong>HEALPix</strong> enabled FL tools (<SPAN  CLASS="texttt">hfl</SPAN> and <SPAN  CLASS="texttt">hflde</SPAN>) to be defined properly during the
<A HREF="#install:idlgdlconfig">IDL/GDL/FL configuration</A>.
</LI>
<LI>to produce PDF files
a recent version of <A ID="tex2html82"
  HREF="https://www.ghostscript.com"><SPAN  CLASS="texttt">ghostscript</SPAN></A>, i.e. 9.07 or more, is recommended.
</LI>
</UL>

<P>

<H3><A ID="SECTION8102">
Impact of FL limitations on <strong>HEALPix</strong> </A>
</H3>

<UL>
<LI>In FL, the <SPAN  CLASS="texttt">!p.font</SPAN> selection is ignored in the 'X' device.
In 'PS' device, the Hershey Fonts (<SPAN  CLASS="texttt">!p.font=-1</SPAN>) and Device Fonts (<SPAN  CLASS="texttt">!p.font=0</SPAN>)
look respectively slightly and noticeably different from their IDL counterparts,
while the TrueType Fonts (<SPAN  CLASS="texttt">!p.font=1</SPAN>) are not fully implemented yet.
<BR>
As a consequence, the graphical outputs of 
<A HREF="./idl_mollview.htm#idl:mollview"><SPAN  CLASS="texttt">azeqview</SPAN>, <SPAN  CLASS="texttt">cartview</SPAN>, <SPAN  CLASS="texttt">gnomview</SPAN>, <SPAN  CLASS="texttt">mollview</SPAN> and <SPAN  CLASS="texttt">orthview</SPAN></A>
will look slightly different in FL and IDL, 
while in those routines the option 
<A HREF="./idl_mollview.htm#idl:mollview:pfonts"><SPAN  CLASS="texttt">PFONTS</SPAN></A> will not work fully as expected.
However, the <A HREF="./idl_mollview.htm#idl:mollview:latex"><SPAN  CLASS="texttt">Latex</SPAN></A> keyword will work properly in those routines.

<P>
</LI>
</UL>

<P>

<H1><A ID="SECTION900"></A>
<A ID="sec:newfeatures"></A>
<BR>
Appendix I: Recent Changes and New Features
</H1>

<H2><A ID="SECTION910"></A><A ID="sec:v380"></A><A ID="install:v380"></A><A ID="sec:v371"></A><A ID="install:v371"></A>
<BR>
Bug corrections and Improvements in Version 3.80
</H2>

<H3><A ID="SECTION911">
General</A>
</H3>

<UL>
<LI>addition of 
<A HREF="#install:libsharp:config"><SPAN  CLASS="texttt">SHARP_PARAL</SPAN></A> and 
<A HREF="#install:cpp_config"><SPAN  CLASS="texttt">CXX_PARAL</SPAN></A> 
to control the parallel implementation of the <SPAN  CLASS="texttt">libsharp</SPAN> library and C++ library and codes;
</LI>
<LI><A HREF="#install:healpy:config"><SPAN  CLASS="texttt">PYTHON</SPAN></A> now defaults to <SPAN  CLASS="texttt">python3</SPAN>
</LI>
</UL>
<H3><A ID="SECTION912">
C++</A>
</H3>

<UL>
<LI>the line-integral convolution interface is now accessible not only from the command line, but also via C++ calls, to allow calling from <SPAN  CLASS="texttt">healpy</SPAN>;
</LI>
<LI>some internals were restructured to allow easier integration with <A ID="tex2html83"
  HREF="http://www.swig.org"><SPAN  CLASS="texttt">SWIG</SPAN></A>
</LI>
</UL>
<H3><A ID="SECTION913">
Fortran 90 facilities and subroutines</A>
</H3>

<UL>
<LI>Improvement of <A HREF="./sub_query_disc.htm#sub:query_disc"><SPAN  CLASS="texttt">query_disc</SPAN></A> routine in <A HREF="./sub_query_disc.htm#sub:query_disc:inclusive"><SPAN style="font-family:monospace">inclusive</SPAN></A> mode,
</LI>
<LI>the routines 
 <A HREF="./sub_alm2map_spin.htm#sub:alm2map_spin"><SPAN  CLASS="texttt">alm2map_spin</SPAN></A> and 
 <A HREF="./sub_map2alm_spin.htm#sub:map2alm_spin"><SPAN  CLASS="texttt">map2alm_spin</SPAN></A> now accept any (integer) spin values <SPAN CLASS="MATH"><IMG
 STYLE="height: 2.33ex; vertical-align: -0.68ex; " SRC="installimg9.png"
 ALT="$\vert s\vert\ge0$"></SPAN>, but the scalar routines
 <A HREF="./sub_alm2map.htm#sub:alm2map"><SPAN  CLASS="texttt">alm2map</SPAN></A> and 
 <A HREF="./sub_map2alm.htm#sub:map2alm"><SPAN  CLASS="texttt">map2alm</SPAN></A> are still recommended for vanishing spin (<SPAN CLASS="MATH"><I>s</I>=0</SPAN>), 
</LI>
<LI>correction of bugs preventing the compilation with versions 10.* of <SPAN  CLASS="texttt">gfortran</SPAN>,
</LI>
<LI>fixed bug affecting <A HREF="./fac_map2gif.htm#fac:map2gif"><SPAN style="font-family:monospace">map2gif</SPAN></A> when compiled with versions 10.* of <SPAN style="font-family:monospace">gfortran</SPAN> and <SPAN style="font-family:monospace">gcc</SPAN>.
</LI>
</UL>
<H3><A ID="SECTION914">
IDL</A>
</H3>

<UL>
<LI>Improvement of <A HREF="./idl_query_disc.htm#idl:query_disc"><SPAN  CLASS="texttt">query_disc</SPAN></A> routine in <A HREF="./idl_query_disc.htm#idl:query_disc:inclusive"><SPAN style="font-family:monospace">inclusive</SPAN></A> mode;
</LI>
<LI>update of the required
    <A ID="tex2html84"
  HREF="https://idlastro.gsfc.nasa.gov/homepage.html"><SPAN  CLASS="texttt">IDL-astron</SPAN> library</A>
routines, and <A ID="tex2html85"
  HREF="http://www.idlcoyote.com"><SPAN  CLASS="texttt">Coyote</SPAN></A>
library
    routines (2021-04-08).</LI>
</UL>

<P>

<H3><A ID="SECTION915">
Python</A>
</H3>

<UL>
<LI>Switch to 
	<A ID="tex2html86"
  HREF="https://github.com/healpy/healpy/releases"><SPAN  CLASS="texttt">healpy 1.15.0</SPAN></A>
(<A ID="tex2html87"
  HREF="https://github.com/healpy/healpy/blob/master/CHANGELOG.rst">CHANGELOG</A>)

<UL>
<LI><SPAN  CLASS="texttt">write_map</SPAN> keeps dtype of input map array instead of float32; <SPAN  CLASS="texttt">read_map</SPAN> keeps dtype of FITS file instead of upcasting to float64; <SPAN  CLASS="texttt">write_cl</SPAN> uses dtype of input cl instead of float64
</LI>
<LI>Changed all warnings to using the <SPAN  CLASS="texttt">logging</SPAN> module, deprecated all <SPAN  CLASS="texttt">verbose</SPAN> keywords
</LI>
<LI>Flip sign for spin-0 <SPAN  CLASS="texttt">alm2map_spin</SPAN> and <SPAN  CLASS="texttt">map2alm_spin</SPAN>; fixed <SPAN  CLASS="texttt">map2alm_spin</SPAN> bug for masked input
</LI>
<LI>Support transparency in plotting with the <SPAN  CLASS="texttt">alpha</SPAN> parameter
</LI>
<LI>Experimental <SPAN  CLASS="texttt">projview</SPAN> function to plot maps using projections from <SPAN  CLASS="texttt">matplotlib</SPAN>
</LI>
<LI>Removed the note that we will change order of cl in <SPAN  CLASS="texttt">synfast</SPAN> and <SPAN  CLASS="texttt">synalm</SPAN>, we will leave <SPAN  CLASS="texttt">new=False</SPAN> default
</LI>
<LI>Added convenience functions <SPAN  CLASS="texttt">order2npix</SPAN> and <SPAN  CLASS="texttt">npix2order</SPAN>
</LI>
<LI>Support nested maps <SPAN  CLASS="texttt">hp.smoothing</SPAN>; fixed indexing issue in <SPAN  CLASS="texttt">bl2beam</SPAN>
</LI>
<LI>Allow OBJECT FITS header not to be a string
</LI>
<LI>Drop support for Python 2.7-3.5; Improvements of the build system; Automatically build wheels for Linux/MacOS on Github actions
</LI>
<LI>and other minor bug fixes ...
</LI>
</UL>
</LI>
</UL>
<H1><A ID="SECTION1000">
Appendix II: Older changes (versions 3.00 to 3.70)</A>
</H1>
<strong>Bug corrections and Improvements in Version 3.70 (2020-07)</strong><A ID="sec:v361"></A><A ID="install:v361"></A><A ID="sec:v370"></A><A ID="install:v370"></A><strong>General</strong>

<UL>
<LI>Fixed several bugs in the <A HREF="#install:configure"><SPAN  CLASS="texttt">configure</SPAN></A> script
</LI>
<LI>Documentation now available in <A HREF="#install:healpix_doc">EPUB format</A>
</LI>
</UL>
<strong>Fortran 90 <A ID="tex2html88"
  HREF="facilities.htm">facilities</A>
and
 	<A ID="tex2html89"
  HREF="subroutines.htm">subroutines</A></strong>

<UL>
<LI>Addition of the subroutines
    <A HREF="./sub_read_fits_partial.htm#sub:read_fits_partial"><SPAN  CLASS="texttt">read_fits_partial</SPAN></A> and 
    <A HREF="./sub_write_fits_partial.htm#sub:write_fits_partial"><SPAN  CLASS="texttt">write_fits_partial</SPAN></A> 
    to read and write FITS files containing polarized or unpolarized maps defined on a fraction of the sky (see <kbd><A ID="tex2html90"
  HREF="https://healpix.sourceforge.io/data/examples/healpix_fits_specs.pdf">https://healpix.sourceforge.io/data/examples/healpix_fits_specs.pdf</A></kbd>).
</LI>
</UL>
<strong><A ID="tex2html91"
  HREF="idl.htm">IDL</A></strong>

<UL>
<LI>Addition of 
   <A HREF="./idl_read_fits_partial.htm#idl:read_fits_partial"><SPAN  CLASS="texttt">read_fits_partial</SPAN></A>  and 
   <A HREF="./idl_write_fits_partial.htm#idl:write_fits_partial"><SPAN  CLASS="texttt">write_fits_partial</SPAN></A> 
    to read and write FITS files containing polarized or unpolarized maps defined on a fraction of the sky (see <kbd><A ID="tex2html92"
  HREF="https://healpix.sourceforge.io/data/examples/healpix_fits_specs.pdf">https://healpix.sourceforge.io/data/examples/healpix_fits_specs.pdf</A></kbd>).
</LI>
<LI>Update of the required
    <A ID="tex2html138"
  HREF="https://idlastro.gsfc.nasa.gov/homepage.html"><SPAN  CLASS="texttt">IDL-astron</SPAN> library</A>
routines, and <A ID="tex2html139"
  HREF="http://www.idlcoyote.com"><SPAN  CLASS="texttt">Coyote</SPAN></A>
library
    routines (2020-07-15).
</LI>
</UL>
<strong><A ID="tex2html93"
  HREF="https://healpy.readthedocs.io/en/latest/">Python</A></strong>

<UL>
<LI>Switch to 
	<A ID="tex2html140"
  HREF="https://github.com/healpy/healpy/releases"><SPAN  CLASS="texttt">healpy 1.14.0</SPAN></A>
(<A ID="tex2html141"
  HREF="https://github.com/healpy/healpy/blob/master/CHANGELOG.rst">CHANGELOG</A>)

<UL>
<LI>Line Integral Convolution plots to plot polarization,
</LI>
<LI>fixed FITS files that were left open,
</LI>
<LI>increased precision in coordinate transforms,
</LI>
<LI>fix propagation on mmax in smoothing,
</LI>
<LI>reworked verbose,
</LI>
<LI>and many other improvements and bugs fixes ...
</LI>
</UL>
</LI>
</UL>
<strong>Bug corrections and Improvements in Version 3.60 (2019-12)</strong><A ID="sec:v360"></A><A ID="install:v360"></A><strong>General</strong>

<UL>
<LI>The computation time of a map synthesis or analysis has been reduced
(for instance, by at least 30% at <!-- MATH
 $N_{\mathrm{side}}=2048$
 -->
<SPAN CLASS="MATH"><I>N</I><SUB>side</SUB>=2048</SPAN> and <!-- MATH
 $\ell_{\mathrm{max}}=4096$
 -->
<SPAN CLASS="MATH"><IMG
 STYLE="height: 2.04ex; vertical-align: -0.45ex; " SRC="installimg10.png"
 ALT="$\ell_{\mathrm{max}}=4096$"></SPAN>),
with the same memory footprint and numerical accuracy as previously, thanks to

<UL>
<LI>major performance increase for Spherical Harmonics Transforms 
in the <A HREF="#install:libsharp:config"><SPAN  CLASS="texttt">libsharp</SPAN></A> C-written library
called by the C++, F90, IDL and python routines and facilities,
thanks to ideas of Keiichi Ishioka
  (<kbd><A ID="tex2html94"
  HREF="https://doi.org/10.2151/jmsj.2018-019">https://doi.org/10.2151/jmsj.2018-019</A></kbd> 
and personal communication);
</LI>
<LI>the possibility of building the <SPAN  CLASS="texttt">libsharp</SPAN> library with simultaneous support for different x86 CPU
  features (SSE2, AVX, AVX2, FMA3, FMA4, AVX512F); the appropriate set of
  subroutines being selected automatically at runtime.
</LI>
</UL>

<P>
</LI>
<LI>The <A HREF="#install:configure"><SPAN  CLASS="texttt">configure</SPAN></A> script will ensure
a single and seamless configuration, compilation and installation
of the <A HREF="#install:libsharp:config"><SPAN  CLASS="texttt">libsharp</SPAN></A> library, 
even if several language implementations of <strong>HEALPix</strong> are compiled.

<P>
</LI>
<LI>The <A HREF="#install:configure"><SPAN  CLASS="texttt">configure</SPAN></A> script now supports
an automated mode beside the usual interactive mode, and some environment variables
can be used to customize its behavior in both modes 
(eg, choice of compilers and their options).

<P>
</LI>
</UL>

<P>
<strong><A ID="tex2html95"
  HREF="https://healpix.sourceforge.io/html/index_cxx.htm">C++</A></strong>

<UL>
<LI>Link to the new and faster <A HREF="#install:libsharp:config"><SPAN  CLASS="texttt">libsharp</SPAN></A> library
</LI>
<LI>Simpler configuration <A HREF="#install:cpp_config">with the systematic use of <SPAN  CLASS="texttt">autotools</SPAN></A>
</LI>
<LI>The C++ binaries, libraries and header files now installed in 
<SPAN  CLASS="texttt">${HEALPIX}/bin</SPAN>, 
<SPAN  CLASS="texttt">${HEALPIX}/lib</SPAN> and 
<SPAN  CLASS="texttt">${HEALPIX}/include</SPAN> directories respectively.
</LI>
<LI>Added documentation for the module <SPAN  CLASS="texttt">needlet_tool</SPAN>.
</LI>
</UL>
<strong>Fortran 90 <A ID="tex2html96"
  HREF="facilities.htm">facilities</A>
and
 	<A ID="tex2html97"
  HREF="subroutines.htm">subroutines</A></strong>

<UL>
<LI>Link to the new and faster <A HREF="#install:libsharp:config"><SPAN  CLASS="texttt">libsharp</SPAN></A> library
</LI>
<LI>Some external C routines replaced by Fortran 2003 extensions.
</LI>
</UL>
<strong><A ID="tex2html98"
  HREF="idl.htm">IDL</A></strong>

<UL>
<LI>Faster <A HREF="./idl_isynfast.htm#idl:isynfast"><SPAN  CLASS="texttt">isynfast</SPAN></A>, <A HREF="./idl_ianafast.htm#idl:ianafast"><SPAN  CLASS="texttt">ianafast</SPAN></A>, <A HREF="./idl_ismoothing.htm#idl:ismoothing"><SPAN  CLASS="texttt">ismoothing</SPAN></A> routines
</LI>
<LI>addition of <A HREF="./idl_outline_earth.htm#idl:outline_earth"><SPAN  CLASS="texttt">outline_earth</SPAN></A> to create a structure outlining Earth features such as coastlines, rivers, country boundaries, ...
</LI>
<LI><A HREF="./idl_mollview.htm#idl:mollview"><SPAN style="font-family:monospace">azeqview, cartview, gnomview, mollview,
orthview</SPAN></A> visualization routines: support for color and thickness in <A HREF="./idl_mollview.htm#idl:mollview:outline"><SPAN  CLASS="texttt">outline</SPAN></A> keyword
</LI>
<LI>Update of the required
    <A ID="tex2html142"
  HREF="https://idlastro.gsfc.nasa.gov/homepage.html"><SPAN  CLASS="texttt">IDL-astron</SPAN> library</A>
routines, and <A ID="tex2html143"
  HREF="http://www.idlcoyote.com"><SPAN  CLASS="texttt">Coyote</SPAN></A>
library
    routines (2019-10-30).
</LI>
</UL>
<strong><A ID="tex2html99"
  HREF="https://healpy.readthedocs.io/en/latest/">Python</A></strong>

<UL>
<LI>Switch to 
	<A ID="tex2html144"
  HREF="https://github.com/healpy/healpy/releases"><SPAN  CLASS="texttt">healpy 1.13.0</SPAN></A>
(<A ID="tex2html145"
  HREF="https://github.com/healpy/healpy/blob/master/CHANGELOG.rst">CHANGELOG</A>)

<UL>
<LI>different handling of default dtype in <SPAN  CLASS="texttt">read_cl</SPAN>, <SPAN  CLASS="texttt">write_cl</SPAN> and <SPAN  CLASS="texttt">read_map</SPAN>
</LI>
<LI>implemented <SPAN  CLASS="texttt">dist2holes</SPAN>, distance from pixel center to closest invalid pixel
</LI>
<LI>allow not-power-of-2 <!-- MATH
 $N_{\mathrm{side}}$
 -->
<SPAN CLASS="MATH"><I>N</I><SUB>side</SUB></SPAN> for RING
</LI>
</UL>
</LI>
</UL>

<P>
<strong>Bug corrections and Improvements in Version 3.50 (2018-11)</strong>
<P>
<strong>Fortran 90 <A ID="tex2html100"
  HREF="facilities.htm">facilities</A>
and
	<A ID="tex2html101"
  HREF="subroutines.htm">subroutines</A></strong>

<UL>
<LI>A bug affecting <A HREF="./sub_map2alm_iterative.htm#sub:map2alm_iterative"><SPAN  CLASS="texttt">map2alm_iterative</SPAN></A>
(when a <A HREF="./sub_map2alm_iterative.htm#sub:map2alm_iterative:mask"><SPAN  CLASS="texttt">mask</SPAN></A> is used in combination with 
<A HREF="./sub_map2alm_iterative.htm#sub:map2alm_iterative:iter_order"><SPAN  CLASS="texttt">iter_order</SPAN></A> <SPAN CLASS="MATH">&gt;0</SPAN>)
and
<A HREF="./fac_anafast.htm#fac:anafast"><SPAN  CLASS="texttt">anafast</SPAN></A> (when
<A HREF="./fac_anafast.htm#fac:anafast:maskfile"><SPAN  CLASS="texttt">maskfile</SPAN></A> or 
<A HREF="./fac_anafast.htm#fac:anafast:theta_cut_deg"><SPAN  CLASS="texttt">theta_cut_deg</SPAN></A>
are used in combination with 
<A HREF="./fac_anafast.htm#fac:anafast:iter_order"><SPAN  CLASS="texttt">iter_order</SPAN></A><SPAN CLASS="MATH">&gt;0</SPAN>) has been corrected,
</LI>
<LI>addition of <A HREF="./sub_alm2map.htm#sub:alm2map:zbounds"><SPAN  CLASS="texttt">zbounds</SPAN></A> in 
<A HREF="./sub_alm2map.htm#sub:alm2map"><SPAN  CLASS="texttt">alm2map</SPAN></A>,
<A HREF="./sub_alm2map_der.htm#sub:alm2map_der"><SPAN  CLASS="texttt">alm2map_der</SPAN></A>,
<A HREF="./sub_alm2map_spin.htm#sub:alm2map_spin"><SPAN  CLASS="texttt">alm2map_spin</SPAN></A>,
in order to simulate (faster) a signal on only a fraction of the sphere,
</LI>
<LI>introduction of <A HREF="./sub_apply_mask.htm#sub:apply_mask"><SPAN  CLASS="texttt">apply_mask</SPAN></A> to apply an arbitrary mask and/or
a latitude cut to a map,
</LI>
<LI><A ID="tex2html146"
  HREF="https://sourceforge.net/p/healpix/bugs/78">improved support for version 18 and more of Intel C and F90 compilers</A>
in <SPAN  CLASS="texttt">configure</SPAN> script,
</LI>
<LI><A ID="tex2html147"
  HREF="https://sourceforge.net/p/healpix/bugs/84">edition to fitstools.F90</A>
allowing a proper compilation with g95.
</LI>
</UL>
<strong><A ID="tex2html102"
  HREF="https://healpix.sourceforge.io/html/index_cxx.htm">C++</A></strong>

<UL>
<LI>C implementation of <A ID="tex2html148"
  HREF="https://www.netlib.org/fftpack">fftpack</A>
replaced with <A ID="tex2html149"
  HREF="https://gitlab.mpcdf.mpg.de/mtr/pocketfft">pocketfft</A>
</LI>
<LI><A ID="tex2html150"
  HREF="https://healpix.sourceforge.io/html/Healpix_cxx/facilities.html">online documentation</A>
for Line Integral Convolution code <SPAN  CLASS="texttt">alice3</SPAN>
</LI>
</UL>
<strong><A ID="tex2html103"
  HREF="idl.htm">IDL</A></strong>

<UL>
<LI><A HREF="./idl_fits2cl.htm#idl:fits2cl"><SPAN  CLASS="texttt">fits2cl</SPAN></A>: addition of <A HREF="./idl_fits2cl.htm#idl:fits2cl:planck3"><SPAN  CLASS="texttt">/PLANCK3</SPAN></A> keyword to read the fiducial <SPAN CLASS="MATH"><IMG
 STYLE="height: 1.69ex; vertical-align: -0.10ex; " SRC="installimg11.png"
 ALT="$\Lambda$"></SPAN>-CDM <SPAN CLASS="MATH"><IMG
 STYLE="height: 2.33ex; vertical-align: -0.68ex; " SRC="installimg6.png"
 ALT="$C(\ell)$"></SPAN> model which best fits the 2018 Planck data analysis (available from <A ID="tex2html151"
  HREF="https://healpix.sourceforge.io/src/3.80/test/planck2018_lcdm_cl_v3.fits"><SPAN  CLASS="texttt">Healpix/test/planck2018_lcdm_cl_v3.fits</SPAN></A>);
</LI>
<LI><A HREF="./idl_rotate_coord.htm#idl:rotate_coord"><SPAN  CLASS="texttt">rotate_coord</SPAN></A>: addition of optional variable <A HREF="./idl_rotate_coord.htm#idl:rotate_coord:delta_psi"><SPAN  CLASS="texttt">Delta_Psi</SPAN></A> containing rotation of polarization on output, and of keyword <A HREF="./idl_rotate_coord.htm#idl:rotate_coord:free_norm"><SPAN  CLASS="texttt">Free_Norm</SPAN></A> to deal with un-normalized input coordinate vectors;
</LI>
<LI>minor bugs correction in 
<A HREF="./idl_mollview.htm#idl:mollview"><SPAN  CLASS="texttt">azeqview, cartview, gnomview, mollview, orthview</SPAN></A> (when 
<A HREF="./idl_mollview.htm#idl:mollview:polarization"><SPAN  CLASS="texttt">polarization=3</SPAN></A>) and 
<A HREF="./idl_alm2fits.htm#idl:alm2fits"><SPAN  CLASS="texttt">alm2fits</SPAN></A> (user provided header now correctly processed).
</LI>
<LI>Update of the required

<A ID="tex2html152"
  HREF="https://idlastro.gsfc.nasa.gov/homepage.html"><SPAN  CLASS="texttt">IDL-astron</SPAN> library</A>
routines, and <A ID="tex2html153"
  HREF="http://www.idlcoyote.com"><SPAN  CLASS="texttt">Coyote</SPAN></A>
library
    routines (2018-09-27).
</LI>
</UL>
<strong><A ID="tex2html104"
  HREF="https://healpy.readthedocs.io/en/latest/">Python</A></strong>

<UL>
<LI>Switch to 
	<A ID="tex2html154"
  HREF="https://github.com/healpy/healpy/releases"><SPAN  CLASS="texttt">healpy 1.12.8</SPAN></A>
(<A ID="tex2html155"
  HREF="https://github.com/healpy/healpy/blob/master/CHANGELOG.rst">CHANGELOG</A>)
</LI>
</UL>

<P>
<strong>Bug corrections and Improvements in Version 3.40 (2018-06)</strong>
<P>
<strong>General</strong>

<UL>
<LI>A new set of (pixel-based) quadrature weights has been introduced, besides the older ring-based ones, to improve the accuracy of the Spherical Harmonics calculation. For maps
  containing a signal that is band-limited at <!-- MATH
 $\ell_{\mathrm{max}}=1.5 N_{\mathrm{side}}$
 -->
<SPAN CLASS="MATH"><IMG
 STYLE="height: 2.04ex; vertical-align: -0.45ex; " SRC="installimg12.png"
 ALT="$\ell_{\mathrm{max}}=1.5 N_{\mathrm{side}}$"></SPAN>, this allows
  recovery of the <SPAN CLASS="MATH"><IMG
 STYLE="height: 1.46ex; vertical-align: -0.45ex; " SRC="installimg13.png"
 ALT="$a_{\ell m}$"></SPAN> at almost machine precision. They are supported by map-analysis routines in C++, Fortran, IDL and Python. 
The weights for power-of-2 values of <!-- MATH
 $N_{\mathrm{side}}$
 -->
<SPAN CLASS="MATH"><I>N</I><SUB>side</SUB></SPAN> in <!-- MATH
 $\{16,\ldots,2048\}$
 -->
<SPAN CLASS="MATH"><IMG
 STYLE="height: 2.33ex; vertical-align: -0.68ex; " SRC="installimg14.png"
 ALT="$\{16,\ldots,2048\}$"></SPAN> are precomputed and shipped in
<A ID="tex2html156"
  HREF="https://healpix.sourceforge.io/src/3.80/data"><SPAN  CLASS="texttt">Healpix/data/weight_pixel_n?????.fits</SPAN></A>, 
and the missing ones can be computed for any value of <!-- MATH
 $N_{\mathrm{side}}$
 -->
<SPAN CLASS="MATH"><I>N</I><SUB>side</SUB></SPAN> with the <SPAN  CLASS="texttt">compute_weights</SPAN> C++ facility.
</LI>
</UL>
<strong><A ID="tex2html105"

HREF="https://healpix.sourceforge.io/html/index_cxx.htm">C++</A></strong>

<UL>
<LI>IMPORTANT: the syntax for specifying ring weights and pixel windows has
  changed! This affects the facilities <SPAN  CLASS="texttt">anafast_cxx</SPAN>, <SPAN  CLASS="texttt">smoothing_cxx</SPAN>,
  <SPAN  CLASS="texttt">udgrade_harmonic_cxx</SPAN>, <SPAN  CLASS="texttt">alm2map_cxx</SPAN>, <SPAN  CLASS="texttt">mult_alm_cxx</SPAN>.
  Pixel window files have to be specified (with path) using the parameter
  <SPAN  CLASS="texttt">windowfile</SPAN>; <SPAN  CLASS="texttt">ringweights</SPAN> is used for ring weight files, and <SPAN  CLASS="texttt">pixelweights</SPAN>
  for pixel weight files.
</LI>
<LI>Full pixel quadrature weights are now supported in map analysis facilities such as <SPAN  CLASS="texttt">anafast_cxx</SPAN>, <SPAN  CLASS="texttt">smoothing_cxx</SPAN> and <SPAN  CLASS="texttt">udgrade_harmonic_cxx</SPAN>
  using the <SPAN  CLASS="texttt">pixelweights</SPAN> parameter.
</LI>
<LI>Experimental <SPAN  CLASS="texttt">needlet_tool</SPAN> code for needlet analysis
</LI>
</UL>
<strong>Fortran 90 <A ID="tex2html106"
  HREF="facilities.htm">facilities</A>
and
	<A ID="tex2html107"
  HREF="subroutines.htm">subroutines</A></strong>

<UL>
<LI>The facilities 
<A HREF="./fac_anafast.htm#fac:anafast"><SPAN  CLASS="texttt">anafast</SPAN></A> and 
<A HREF="./fac_smoothing.htm#fac:smoothing"><SPAN  CLASS="texttt">smoothing</SPAN></A> now support pixel-based quadrature weights.
Introduction of the supporting 
<A HREF="./sub_nside2npweights.htm#sub:nside2npweights"><SPAN  CLASS="texttt">nside2npweights</SPAN></A>,
<A HREF="./sub_unfold_weightsfile.htm#sub:unfold_weightsfile"><SPAN  CLASS="texttt">unfold_weightsfile</SPAN></A>,
<A HREF="./sub_get_healpix_pixel_weight_fi.htm#sub:get_healpix_xxx_file:ghw8f"><SPAN  CLASS="texttt">get_healpix_weight_file</SPAN></A>,
<A HREF="./sub_get_healpix_pixel_weight_fi.htm#sub:get_healpix_xxx_file:ghpw8f"><SPAN  CLASS="texttt">get_healpix_pixel_weight_file</SPAN></A>.
</LI>
<LI>The subroutine 
<A HREF="./sub_input_map.htm#sub:input_map"><SPAN  CLASS="texttt">input_map</SPAN></A> in its default mode
and the facilities 
<A HREF="./fac_anafast.htm#fac:anafast"><SPAN  CLASS="texttt">anafast</SPAN></A>,
<A HREF="./fac_median_filter.htm#fac:median_filter"><SPAN  CLASS="texttt">median_filter</SPAN></A>,
<A HREF="./fac_smoothing.htm#fac:smoothing"><SPAN  CLASS="texttt">smoothing</SPAN></A>, and
<A HREF="./fac_ud_grade.htm#fac:ud_grade"><SPAN  CLASS="texttt">ud_grade</SPAN></A> 
test the value of the <SPAN  CLASS="texttt">POLCCONV</SPAN> FITS keyword when reading a polarized map,
and interpret the polarization accordingly, 
as described in the <A HREF="./intro_HEALPix_conventions.htm#intro:polcconv">note on POLCCONV</A> in <A ID="tex2html157"
  HREF="intro.htm">The <strong>HEALPix</strong> Primer</A>.
</LI>
<LI><A HREF="./fac_median_filter.htm#fac:median_filter"><SPAN  CLASS="texttt">median_filter</SPAN></A> facility and 
<A HREF="./sub_median.htm#sub:median"><SPAN  CLASS="texttt">median</SPAN></A> subroutine: faster by moving an internal array from heap to stack; do not crash anymore when dealing with empty data sets; 
slightly different output of <A HREF="./fac_median_filter.htm#fac:median_filter"><SPAN  CLASS="texttt">median_filter</SPAN></A>: when median is computed over an even number of pixels <SPAN CLASS="MATH"><IMG
 STYLE="height: 1.92ex; vertical-align: -0.41ex; " SRC="installimg15.png"
 ALT="$n \ge 100$"></SPAN>, sorted in <SPAN CLASS="MATH">[1,<I>n</I>]</SPAN>,
the output is <SPAN CLASS="MATH"><I>d</I>(<I>n</I>/2)</SPAN> instead of <!-- MATH
 $(d(n/2)+d(n/2+1))/2$
 -->
<SPAN CLASS="MATH">(<I>d</I>(<I>n</I>/2)+<I>d</I>(<I>n</I>/2+1))/2</SPAN> previously. Result remains <SPAN CLASS="MATH"><I>d</I>(<I>n</I>/2+1)</SPAN> for odd <SPAN CLASS="MATH"><I>n</I></SPAN>.
</LI>
</UL>

<P>
<strong>IDL</strong>

<UL>
<LI>The routines <A HREF="./idl_ianafast.htm#idl:ianafast"><SPAN  CLASS="texttt">ianafast</SPAN></A> and <A HREF="./idl_ismoothing.htm#idl:ismoothing"><SPAN  CLASS="texttt">ismoothing</SPAN></A>
can now use pixel-based quadrature weights. Addition of the supporting functions 
<A HREF="./idl_nside2npweights.htm#idl:nside2npweights"><SPAN  CLASS="texttt">nside2npweights</SPAN></A> and
<A HREF="./idl_unfold_weights.htm#idl:unfold_weights"><SPAN  CLASS="texttt">unfold_weights</SPAN></A>.
</LI>
<LI><A HREF="./idl_ianafast.htm#idl:ianafast"><SPAN  CLASS="texttt">ianafast</SPAN></A> and <A HREF="./idl_ismoothing.htm#idl:ismoothing"><SPAN  CLASS="texttt">ismoothing</SPAN></A>: 
see note on <SPAN  CLASS="texttt">POLCCONV</SPAN> in F90 facilities above.
</LI>
<LI><A ID="install:idl:change_polcconv"></A><A ID="install:idl:change_polcconv"></A><A HREF="./idl_change_polcconv.htm#idl:change_polcconv"><SPAN  CLASS="texttt">change_polcconv</SPAN></A> has been improved to allow the change of 
polarization convention (by changing the sign of <SPAN CLASS="MATH"><I>U</I></SPAN> Stokes parameter and updating <A HREF="./intro_HEALPix_conventions.htm#intro:polcconv"><SPAN  CLASS="texttt">POLCCONV</SPAN></A> value) in FITS files 
containing polarized maps generated by standard <strong>HEALPix</strong> tools, 
as well as for specific formats brewed by the WMAP and Planck projects throughout the years.
</LI>
<LI>New <A HREF="./idl_help_st.htm#idl:help_st"><SPAN  CLASS="texttt">help_st</SPAN></A> to get information on a structure and its sub-structures
</LI>
<LI><A HREF="./idl_mollview.htm#idl:mollview"><SPAN  CLASS="texttt">azeqview, cartview, gnomview, mollview, orthview</SPAN></A> 
visualization routines:
  
<UL>
<LI>addition of the keywords 
	<A HREF="./idl_mollview.htm#idl:mollview:customize"><SPAN  CLASS="texttt">CUSTOMIZE</SPAN></A> and 
	<A HREF="./idl_mollview.htm#idl:mollview:default_settings"><SPAN  CLASS="texttt">DEFAULT_SETTINGS</SPAN></A>
	for extensize customization of the figures produced
</LI>
<LI><A HREF="./idl_mollview.htm#idl:mollview:glsize"><SPAN  CLASS="texttt">GLSIZE</SPAN></A> and
	<A HREF="./idl_mollview.htm#idl:mollview:iglsize"><SPAN  CLASS="texttt">IGLSIZE</SPAN></A> can now be 2-element vectors to control separately the size
	(and presence) of labels on the parallel and meridian graticules
</LI>
<LI>fine control of polarisation rods thickness with <A HREF="./idl_mollview.htm#idl:mollview:polarization"><SPAN style="font-family:monospace">POLARIZATION</SPAN></A>
</LI>
<LI>addition of the <A HREF="./idl_mollview.htm#idl:mollview:silhouette"><SPAN style="font-family:monospace">SILHOUETTE</SPAN></A> keyword to add a tunable silhouette around the projected map (<A HREF="./idl_mollview.htm#idl:mollview"><SPAN style="font-family:monospace">mollview</SPAN> and <SPAN style="font-family:monospace">orthview</SPAN> only</A>)
  
</LI>
</UL>
</LI>
<LI>Improved support for <A HREF="#install:using_gdl">GDL</A> and <A HREF="#install:using_fl">FL (Fawlty Language)</A>.
</LI>
<LI>Update of the required
    <A ID="tex2html158"
  HREF="https://idlastro.gsfc.nasa.gov/homepage.html"><SPAN  CLASS="texttt">IDL-astron</SPAN> library</A>
routines, and <A ID="tex2html159"
  HREF="http://www.idlcoyote.com"><SPAN  CLASS="texttt">Coyote</SPAN></A>
library
    routines (2018-05-15).
</LI>
</UL>
<strong><A ID="tex2html108"
  HREF="https://healpy.readthedocs.io/en/latest/">Python</A></strong>

<UL>
<LI>Switch to 
	<A ID="tex2html160"
  HREF="https://github.com/healpy/healpy/releases"><SPAN  CLASS="texttt">healpy 1.12.0</SPAN></A>
(<A ID="tex2html161"
  HREF="https://github.com/healpy/healpy/blob/master/CHANGELOG.rst">CHANGELOG</A>)
</LI>
<LI>Addition of the python facility <SPAN  CLASS="texttt">src/python/change_polcconv.py</SPAN> to change the polarization convention 
(see <A HREF="#install:idl:change_polcconv">IDL's <SPAN  CLASS="texttt">change_polcconv.pro</SPAN> above</A>).
</LI>
</UL>

<P>
<strong>Bug corrections and Improvements in Version 3.31 (2016-08)</strong>
<P>
<strong>General</strong>
	
<UL>
<LI>Detailed <A HREF="#sec:windows">HOWTO</A> for installation under Windows;
</LI>
<LI>Interactive <SPAN  CLASS="texttt">configure</SPAN> script now supports MINGW environment (for Windows), 
		and better detects <SPAN  CLASS="texttt">gcc</SPAN> and <SPAN  CLASS="texttt">python</SPAN> versions;
</LI>
<LI>Improved cross-document linking in PDF documentation.
	
</LI>
</UL>
<strong><A ID="tex2html109"
  HREF="https://healpix.sourceforge.io/html/index_cxx.htm">C++</A></strong>
	
<UL>
<LI>Removal of C++11 features inadvertently introduced in Version 3.30 
	(see <A ID="tex2html162"
  HREF="https://sourceforge.net/p/healpix/bugs/72"><SPAN  CLASS="texttt">https://sourceforge.net/p/healpix/bugs/72</SPAN></A>)

</LI>
</UL>
<strong>Fortran 90 <A ID="tex2html110"
  HREF="facilities.htm">facilities</A>
and
 	<A ID="tex2html111"
  HREF="subroutines.htm">subroutines</A></strong>
	
<UL>
<LI>Bug correction in <A HREF="./sub_input_map.htm#sub:input_map"><SPAN  CLASS="texttt">input_map</SPAN></A> routine for reading of polarized multi-HDU cut sky FITS files;
</LI>
<LI>Introduction of 
<A HREF="./fac_alteralm.htm#fac:alteralm:winfiledir_in"><SPAN  CLASS="texttt">winfiledir_*</SPAN></A> and 
<A HREF="./fac_alteralm.htm#fac:alteralm:windowfile_in"><SPAN  CLASS="texttt">windowfile_*</SPAN></A> qualifiers in <A HREF="./fac_alteralm.htm#fac:alteralm"><SPAN  CLASS="texttt">alteralm</SPAN></A> facility.
	
</LI>
</UL>
<strong><A ID="tex2html112"
  HREF="idl.htm">IDL</A></strong>
	
<UL>
<LI>Improved support for <A HREF="#install:using_gdl">GDL</A>;
</LI>
<LI>update of the required
    <A ID="tex2html163"
  HREF="https://idlastro.gsfc.nasa.gov/homepage.html"><SPAN  CLASS="texttt">IDL-astron</SPAN> library</A>
routines, and <A ID="tex2html164"
  HREF="http://www.idlcoyote.com"><SPAN  CLASS="texttt">Coyote</SPAN></A>
library
    routines (2016-08-19).
	
</LI>
</UL>
<strong><A ID="tex2html113"
  HREF="https://healpy.readthedocs.io/en/latest/">Python</A></strong>
	
<UL>
<LI>Switch to 
	<A ID="tex2html165"
  HREF="https://github.com/healpy/healpy/releases"><SPAN  CLASS="texttt">healpy 1.9.1</SPAN></A>
(<A ID="tex2html166"
  HREF="https://github.com/healpy/healpy/blob/master/CHANGELOG.rst">CHANGELOG</A>)

<UL>
<LI>Removed C++ 11 features
</LI>
<LI>Streamlined setup.py
</LI>
<LI>Plotting fixes for Python 3
</LI>
<LI>Numpy 1.10 fix
</LI>
</UL>
</LI>
</UL>

<P>
<strong>Bug corrections and Improvements in Version 3.30 (2015-10)</strong>
<P>
<strong><A ID="tex2html114"
  HREF="https://healpix.sourceforge.io/html/index_cxx.htm">C++</A></strong>

<UL>
<LI>support for multi-order coverages (MOC);
</LI>
<LI>allow generation of <SPAN CLASS="MATH"><IMG
 STYLE="height: 1.46ex; vertical-align: -0.45ex; " SRC="installimg13.png"
 ALT="$a_{\ell m}$"></SPAN> from 6-component power spectra;
</LI>
<LI>moved from <SPAN  CLASS="texttt">alice2</SPAN> to <SPAN  CLASS="texttt">alice3</SPAN>, which produces FITS <strong>HEALPix</strong> maps as output.
 These can be visualized more flexibly with external tools.
</LI>
<LI>switch from custom <SPAN  CLASS="texttt">xcomplex</SPAN> class to <SPAN  CLASS="texttt">std::complex</SPAN>;
</LI>
<LI><SPAN  CLASS="texttt">rangeset</SPAN> class has been redesigned.
</LI>
</UL>

<P>
<strong>Fortran 90 <A ID="tex2html115"
  HREF="facilities.htm">facilities</A>
and
	<A ID="tex2html116"
  HREF="subroutines.htm">subroutines</A></strong>

<UL>
<LI><A HREF="./fac_anafast.htm#fac:anafast"><SPAN style="font-family:monospace">anafast</SPAN></A> facility now produces nine spectra 
	(TT, EE, BB, TE, TB, EB, ET, BT and BE), instead of six previously,
          when analyzing two polarized maps;
</LI>
<LI><A HREF="./sub_alm2cl.htm#sub:alm2cl"><SPAN style="font-family:monospace">alm2cl</SPAN></A> subroutine can now produces nine spectra 
      (TT, EE, BB, TE, TB, EB, ET, BT and BE), instead of six previously, when 
      called with two sets of polarized <SPAN CLASS="MATH"><IMG
 STYLE="height: 1.46ex; vertical-align: -0.45ex; " SRC="installimg13.png"
 ALT="$a_{\ell m}$"></SPAN> and can also symmetrize 
      the output <SPAN CLASS="MATH"><IMG
 STYLE="height: 2.33ex; vertical-align: -0.68ex; " SRC="installimg6.png"
 ALT="$C(\ell)$"></SPAN> if requested;
</LI>
<LI>the <SPAN CLASS="MATH"><IMG
 STYLE="height: 1.46ex; vertical-align: -0.45ex; " SRC="installimg13.png"
 ALT="$a_{\ell m}$"></SPAN> generated by 
	<A HREF="./sub_create_alm.htm#sub:create_alm"><SPAN style="font-family:monospace">create_alm</SPAN></A> subroutine can now take into account
 non-zero (exotic) TB and EB cross-spectra (option <A HREF="./sub_create_alm.htm#sub:create_alm:polar"><SPAN style="font-family:monospace">polar=2</SPAN></A>) if the input FITS file contains the relevant information
</LI>
<LI>new routines <A HREF="./sub_nest2uniq.htm#sub:nest2uniq"><SPAN style="font-family:monospace">nest2uniq</SPAN></A> 
	and <A HREF="./sub_uniq2nest.htm#sub:uniq2nest"><SPAN style="font-family:monospace">uniq2nest</SPAN></A> for conversion 
	of standard pixel index to/from Unique ID number. See <A HREF="./intro_Geometric_Algebraic_Propert.htm#intro:unique">"The Unique Identifier scheme"</A> section in <A ID="tex2html167"
  HREF="intro.htm">"<strong>HEALPix</strong> Introduction Document"</A>
for more details.
</LI>
<LI>improved 
<A HREF="./sub_write_bintabh.htm#sub:write_bintabh:repeat"><SPAN style="font-family:monospace">repeat</SPAN></A>
behavior in <A HREF="./sub_write_bintabh.htm#sub:write_bintabh"><SPAN style="font-family:monospace">write_bintabh</SPAN></A> routine
</LI>
<LI>edited <A HREF="./sub_map2alm_iterative.htm#sub:map2alm_iterative"><SPAN style="font-family:monospace">map2alm_iterative</SPAN></A> 
routine to avoid a bug specific to Intel's Ifort 15.0.2
</LI>
<LI>CFITSIO version 3.20 (August 2009) or more now required;
</LI>
</UL>

<P>
<strong><A ID="tex2html117"
  HREF="idl.htm">IDL</A></strong>

<UL>
<LI><A HREF="./idl_mollview.htm#idl:mollview"><SPAN style="font-family:monospace">azeqview, cartview, gnomview, mollview, orthview</SPAN></A> 
visualization routines:
 
<UL>
<LI>addition of <A HREF="./idl_mollview.htm#idl:mollview:pdf"><SPAN style="font-family:monospace">PDF</SPAN></A> keyword for production of Adobe PDF outputs;
</LI>
<LI>addition of <A HREF="./idl_mollview.htm#idl:mollview:latex"><SPAN style="font-family:monospace">LATEX</SPAN></A> keyword for genuine 
 or emulated <SPAN CLASS="logo,LaTeX">L<SUP><SMALL>A</SMALL></SUP>T<SMALL>E</SMALL>X</SPAN> processing of character strings;
</LI>
<LI>addition of <A HREF="./idl_mollview.htm#idl:mollview:pfonts"><SPAN style="font-family:monospace">PFONTS</SPAN></A> keyword to select 
origin and type of character font;
</LI>
<LI>the <A HREF="./idl_mollview.htm#idl:mollview:crop"><SPAN style="font-family:monospace">CROP</SPAN></A> keyword now has the same behavior for all output media (GIF, JPEG, PDF, PNG, PS, ... and X);  the <A HREF="./idl_mollview.htm#idl:mollview:nobar"><SPAN style="font-family:monospace">NOBAR</SPAN></A> keyword now removes the color bar <EM>or</EM> the polarization color wheel, as applicable; correct EQUINOX date in header of output <A HREF="./idl_mollview.htm#idl:mollview:fits">FITS</A> map; the double precision maps and those with constant value are now correctly handled.
 
</LI>
</UL>
</LI>
<LI><A HREF="./idl_fits2cl.htm#idl:fits2cl"><SPAN style="font-family:monospace">fits2cl</SPAN></A>: addition of <A HREF="./idl_fits2cl.htm#idl:fits2cl:planck2"><SPAN style="font-family:monospace">/PLANCK2</SPAN></A> keyword
to read best fit <SPAN CLASS="MATH"><IMG
 STYLE="height: 2.33ex; vertical-align: -0.68ex; " SRC="installimg6.png"
 ALT="$C(\ell)$"></SPAN> model to Planck 2015 data.
</LI>
<LI>new routines <A HREF="./idl_nest2uniq.htm#idl:nest2uniq"><SPAN style="font-family:monospace">nest2uniq</SPAN></A> and <A HREF="./idl_uniq2nest.htm#idl:uniq2nest"><SPAN style="font-family:monospace">uniq2nest</SPAN></A> for conversion of standard pixel index to/from Unique ID number. See <A HREF="./intro_Geometric_Algebraic_Propert.htm#intro:unique">"The Unique Identifier scheme"</A> section in <A ID="tex2html168"
  HREF="intro.htm">"<strong>HEALPix</strong> Introduction Document"</A>
for more details.
</LI>
<LI><strong>HEALPix</strong> enabled GDL commands (<SPAN style="font-family:monospace">hgdl</SPAN> and  <SPAN style="font-family:monospace">hgdlde</SPAN>) are defined during the 
<A HREF="#install:idlgdlconfig">configuration process</A>.
</LI>
<LI>update of the required
    <A ID="tex2html169"
  HREF="https://idlastro.gsfc.nasa.gov/homepage.html"><SPAN style="font-family:monospace">IDL-astron</SPAN> library</A>
routines, and <A ID="tex2html170"
  HREF="http://www.idlcoyote.com"><SPAN style="font-family:monospace">Coyote</SPAN></A>
library
    routines (2015-09-23).
</LI>
</UL>

<P>
<strong><A ID="tex2html118"
  HREF="https://healpix.sourceforge.io/html/java/index.html">Java</A></strong>

<UL>
<LI>deprecated parts of the library have been removed;
</LI>
<LI>MOC support (see 
<A ID="tex2html171"
  HREF="http://ivoa.net/documents/MOC/">http://ivoa.net/documents/MOC/</A>
for high-level description);
</LI>
<LI>queries for arbitrary polygons (using MOC);
</LI>
<LI>new targets in <SPAN style="font-family:monospace">build.xml</SPAN> which allow compilation without external JARs.
</LI>
</UL>

<P>
<strong><A ID="tex2html119"
  HREF="https://healpy.readthedocs.io/en/latest/">Python</A></strong>

<UL>
<LI>switch to <A ID="tex2html172"
  HREF="https://github.com/healpy/healpy/releases"><SPAN style="font-family:monospace">healpy
1.9.0</SPAN></A>
<UL>
<LI>same C++ source code as <strong>HEALPix</strong> 3.30
</LI>
<LI>drop support for Python 2.6
</LI>
<LI>support for <SPAN style="font-family:monospace">astropy.fits</SPAN>
</LI>
<LI>improvements to  <SPAN style="font-family:monospace">read_map</SPAN> and <SPAN style="font-family:monospace">write_map</SPAN> 
</LI>
<LI>renamed <SPAN style="font-family:monospace">get_neighbours</SPAN> to <SPAN style="font-family:monospace">get_interp_weights</SPAN>
</LI>
<LI>several bug fixes in build and installation processes
	
</LI>
</UL>
</LI>
</UL>

<P>
<strong>Bug corrections and Improvements in Version 3.20 (2014-12)</strong> 
<P>
<strong>General</strong>
	
<UL>
<LI>Generation of 
<A ID="tex2html173"
  HREF="https://en.wikipedia.org/wiki/Pkg-config"><SPAN style="font-family:monospace">pkg-config</SPAN></A>
files during the configuration of the C, C++ and F90 packages. 
See Section&nbsp;<A HREF="#sec:pkg-config">6</A> of 
<A ID="tex2html174"
  HREF="install.htm">"<strong>HEALPix</strong>  Installation"</A>
for
details.
</LI>
</UL>
<strong><A ID="tex2html120"
  HREF="csub.htm">C</A></strong>

<UL>
<LI>Top <SPAN style="font-family:monospace">configure</SPAN> script now proposes compilation with <EM>or</EM> without
CFITSIO-related functions
</LI>
<LI>Improved <SPAN style="font-family:monospace">autotools</SPAN> support
</LI>
</UL>

<P>
<strong>C++</strong>

<UL>
<LI>automatic workaround for bugs in older versions of GNU <SPAN style="font-family:monospace">g++</SPAN> compiler
 (bug reports 
<A ID="tex2html175"
  HREF="https://sourceforge.net/p/healpix/bugs/37">37</A>, 
<A ID="tex2html176"
  HREF="https://sourceforge.net/p/healpix/bugs/45">45</A>, 
<A ID="tex2html177"
  HREF="https://sourceforge.net/p/healpix/bugs/48">48</A>, 
<A ID="tex2html178"
  HREF="https://sourceforge.net/p/healpix/bugs/51">51</A>)
</LI>
<LI>workaround for possible bug in Intel <SPAN style="font-family:monospace">icc</SPAN> 14.0 compiler
</LI>
<LI>bug fix in Mollweide projection in <SPAN style="font-family:monospace">map2tga</SPAN> when not looking at (0,0)
</LI>
<LI><SPAN style="font-family:monospace">autotools</SPAN> updates
</LI>
<LI>deprecation warnings in <SPAN style="font-family:monospace">alice2</SPAN>, soon to be replaced
</LI>
</UL>

<P>
<strong>Fortran 90 <A ID="tex2html121"
  HREF="facilities.htm">facilities</A>
and
	<A ID="tex2html122"
  HREF="subroutines.htm">subroutines</A></strong>

<UL>
<LI><strong>HEALPix</strong>-F90 routines and facilities can now also be compiled with
the free Fortran95 compiler <SPAN  CLASS="textbf">g95</SPAN>
(<kbd><A ID="tex2html123"
  HREF="http://www.g95.org/">http://www.g95.org/</A></kbd>).
See Section&nbsp;<A HREF="#sec:freef90compilers">7.1</A> of <A ID="tex2html179"
  HREF="install.htm">"<strong>HEALPix</strong>  Installation"</A>
for details.
</LI>
<LI>A separate <SPAN style="font-family:monospace">build</SPAN> directory is used to store the objects,
modules, ... produced during the compilation of the source codes
</LI>
<LI>improved handling of long FITS keywords, now producing FITS files
fully compatible with the
<A ID="tex2html180"
  HREF="https://pypi.org/project/pyfits/3.3"><SPAN style="font-family:monospace">PyFITS</SPAN></A>
and 
<SPAN style="font-family:monospace">Astropy</SPAN> (<kbd><A ID="tex2html124"
  HREF="https://www.astropy.org/">https://www.astropy.org/</A></kbd>)
<SPAN style="font-family:monospace">Python</SPAN> libraries
</LI>
<LI>improved FITS file parsing in 
<A HREF="./sub_generate_beam.htm#sub:generate_beam"><SPAN style="font-family:monospace">generate_beam</SPAN></A>,
affecting the external <SPAN CLASS="MATH"><I>B</I>(<I>l</I>)</SPAN> reading in the F90 facilities 
<A HREF="./fac_alteralm.htm#fac:alteralm"><SPAN style="font-family:monospace">alteralm</SPAN></A>, 
<A HREF="./fac_synfast.htm#fac:synfast"><SPAN style="font-family:monospace">synfast</SPAN></A>, 
<A HREF="./fac_sky_ng_sim.htm#fac:sky_ng_sim"><SPAN style="font-family:monospace">sky_ng_sim</SPAN></A>, 
<A HREF="./fac_smoothing.htm#fac:smoothing"><SPAN style="font-family:monospace">smoothing</SPAN></A>.
</LI>
</UL>

<P>
<strong><A ID="tex2html125"
  HREF="idl.htm">IDL</A></strong>

<UL>
<LI>addition of <A HREF="./idl_ialteralm.htm#idl:ialteralm"><SPAN style="font-family:monospace">ialteralm</SPAN></A> to modify
  Spherical Harmonics coefficients (<SPAN CLASS="MATH"><IMG
 STYLE="height: 1.46ex; vertical-align: -0.45ex; " SRC="installimg13.png"
 ALT="$a_{\ell m}$"></SPAN>).
</LI>
<LI>addition of <A HREF="./idl_planck_colors.htm#idl:planck_colors"><SPAN style="font-family:monospace">planck_colors</SPAN></A> to
  modify current color table to one used in Planck 2013 publications.
</LI>
<LI><A HREF="./idl_mollview.htm#idl:mollview"><SPAN style="font-family:monospace">cartview, gnomview, mollview, orthview</SPAN></A>:

<UL>
<LI>addition of  
    <A HREF="./idl_mollview.htm#idl:mollview:bad_color"><SPAN style="font-family:monospace">BAD_COLOR</SPAN></A>,
    <A HREF="./idl_mollview.htm#idl:mollview:bg_color"><SPAN style="font-family:monospace">BG_COLOR</SPAN></A> and
    <A HREF="./idl_mollview.htm#idl:mollview:fg_color"><SPAN style="font-family:monospace">FG_COLOR</SPAN></A> keywords to change the color of the
    missing pixels, background and foreground labels and lines.
</LI>
<LI>support for 
    <A HREF="./idl_mollview.htm#idl:mollview:colt"><SPAN style="font-family:monospace">COLT='planck1'</SPAN></A> and 
    <A HREF="./idl_mollview.htm#idl:mollview:colt"><SPAN style="font-family:monospace">COLT='planck2'</SPAN></A> to use the Planck color tables
    defined in <A HREF="./idl_planck_colors.htm#idl:planck_colors"><SPAN style="font-family:monospace">planck_colors</SPAN></A>
  
</LI>
</UL>
</LI>
<LI>Bugs correction in 
<A HREF="./idl_bin_llcl.htm#idl:bin_llcl"><SPAN style="font-family:monospace">bin_llcl</SPAN></A>,
<A HREF="./idl_query_disc.htm#idl:query_disc"><SPAN style="font-family:monospace">query_disc</SPAN></A>.
</LI>
<LI>update of the required
    <A ID="tex2html181"
  HREF="https://idlastro.gsfc.nasa.gov/homepage.html"><SPAN style="font-family:monospace">IDL-astron</SPAN> library</A>
routines, and their supporting <A ID="tex2html182"
  HREF="http://www.idlcoyote.com"><SPAN style="font-family:monospace">Coyote</SPAN></A>
routines (2014-11-10).
</LI>
</UL>

<P>
<strong>Java</strong>

<UL>
<LI>explicit deprecation warnings in the source codes
</LI>
</UL>

<P>
<strong>Python</strong>

<UL>
<LI>switch to <A ID="tex2html183"
  HREF="https://github.com/healpy/healpy/releases"><SPAN style="font-family:monospace">healpy
1.8.1</SPAN></A>
<UL>
<LI>fixes bugs in monopole removal, 
</LI>
<LI>adds orthographic projection,
</LI>
<LI>easier install on MacOSX
	
</LI>
</UL>
</LI>
</UL>

<P>
<strong>Bug corrections and Improvements in Version 3.11 (2013-04)</strong> 

<P>
<strong>General</strong>
<A ID="sec:general3p11"></A>

<UL>
<LI><A ID="tex2html184"
  HREF="https://sourceforge.net/projects/libsharp"><SPAN style="font-family:monospace">libsharp</SPAN></A>
C library used for Spherical Harmonics Transforms 
in Fortran and C++ since <strong>HEALPix</strong>  3.10
can now be compiled with <EM>any</EM> <SPAN style="font-family:monospace">gcc</SPAN> version.
</LI>
</UL>

<P>
<strong>C++</strong>

<UL>
<LI>See General section above
</LI>
</UL>
<strong>Fortran 90 <A ID="tex2html126"
  HREF="facilities.htm">facilities</A>
and
	<A ID="tex2html127"
  HREF="subroutines.htm">subroutines</A></strong>

<UL>
<LI>bug correction in <A HREF="./sub_query_disc.htm#sub:query_disc"><SPAN style="font-family:monospace">query_disc</SPAN></A> 
	routine in <SPAN style="font-family:monospace">inclusive</SPAN> mode
</LI>
<LI>bug correction in <A HREF="./sub_alm2map_spin.htm#sub:alm2map_spin"><SPAN style="font-family:monospace">alm2map_spin</SPAN></A> 
	routine, which had its <SPAN style="font-family:monospace">spin</SPAN> value set to 2
</LI>
<LI>See General section above
</LI>
</UL>
<strong><A ID="tex2html128"
  HREF="idl.htm">IDL</A></strong>

<UL>
<LI><A HREF="./idl_pix2xxx_ang2xxx_vec2xxx_nes.htm#idl:pix_tools"><SPAN style="font-family:monospace">ang2pix_ring</SPAN></A> and
		<A HREF="./idl_pix2xxx_ang2xxx_vec2xxx_nes.htm#idl:pix_tools"><SPAN style="font-family:monospace">pix2ang_nest</SPAN></A>
		routines now accept scalar arguments
</LI>
</UL>

<P>
<strong>Bug corrections and Improvements in Version 3.10 (2013-03)</strong>
<strong>General</strong>
N/A<strong><A ID="tex2html129"
  HREF="csub.htm">C</A></strong>

<UL>
<LI>experimental GNU autotools support (undocumented); the standard
configuration script remains available
</LI>
</UL>

<P>
<strong>C++</strong>

<UL>
<LI>Spherical Harmonics Transform library <SPAN style="font-family:monospace">libpsht</SPAN> replaced by <A ID="tex2html185"
  HREF="https://sourceforge.net/projects/libsharp"><SPAN style="font-family:monospace">libsharp</SPAN></A>
(<A ID="tex2html186"
  HREF="https://arxiv.org/abs/1303.4945">Reinecke &amp; Seljebotn, 2013</A>). 
<BR><EM><A ID="install:cpp:gccreleases"></A>Note that 
some <A ID="tex2html130"

HREF="https://gcc.gnu.org/releases.html"><SPAN style="font-family:monospace">gcc</SPAN> versions</A>
(4.4.1 to 4.4.6) crash with an internal compiler error during compilation of <SPAN style="font-family:monospace">libsharp</SPAN></EM>. 
The problem has been fixed in <SPAN style="font-family:monospace">gcc</SPAN> 4.4.7, 4.5.*, 4.6.*, 4.7.* and
newer versions and was not present in versions 4.2.* and 4.3.*.
</LI>
<LI>added <SPAN style="font-family:monospace">boundaries()</SPAN> method to <SPAN style="font-family:monospace">T_Healpix_Base</SPAN>
</LI>
<LI>experimental GNU autotools support (undocumented); the standard
configuration script remains available
</LI>
</UL>

<P>
<strong>Fortran 90 <A ID="tex2html131"
  HREF="facilities.htm">facilities</A>
and
	<A ID="tex2html132"
  HREF="subroutines.htm">subroutines</A></strong>

<UL>
<LI>all Fortran facilities now support most of <SPAN style="font-family:monospace">cfitsio</SPAN>'s "<A ID="tex2html187"
  HREF="https://heasarc.gsfc.nasa.gov/docs/software/fitsio/filters.html">Extended File
Name Syntax</A>" features,
allowing the reading and processing of an arbitrary HDU and table column out of
remote, compressed FITS files. For example, setting 
<BR><SPAN style="font-family:monospace">infile = </SPAN><SPAN style="font-family:monospace">ftp://</SPAN><I>url/file.fits</I><SPAN style="font-family:monospace">.gz</SPAN><SPAN style="font-family:monospace">[</SPAN><I>extn</I><SPAN style="font-family:monospace">]</SPAN><SPAN style="font-family:monospace">[col </SPAN><I>colname</I><SPAN style="font-family:monospace">]</SPAN>  
<BR>
in <A HREF="./fac_anafast.htm#fac:anafast"><SPAN style="font-family:monospace">anafast</SPAN></A>
will download the FITS file <I>file.fits.gz</I> from <I>url</I>, 
uncompress it, open the HDU (extension) featuring keyword <SPAN style="font-family:monospace">EXTNAME=</SPAN><I>extn</I>, or the one with 1-based rank number <I>extn</I>, read the table column
with <SPAN style="font-family:monospace">TTYPE*=</SPAN><I>colname</I> out of it and will analyze it.
<BR>
It is also possible to perform a remote <A HREF="./fac_anafast.htm#fac:anafast"><SPAN style="font-family:monospace">anafast</SPAN></A> analysis of a 
<A ID="tex2html188"
  HREF="https://www.sciops.esa.int/index.php?project=planck&amp;page=Planck_Legacy_Archive">Planck Legacy Archive (PLA)</A>
sky map named <I>map.fits</I> via the PLA <A ID="tex2html189"
  HREF="https://pla.esac.esa.int/pla/aio/">AIO
Subsystem</A>
by simply setting
<SPAN style="font-family:monospace">infile=https://pla.esac.esa.int/pla/aio/product-action?MAP.MAP_ID=</SPAN><I>map.fits</I>
as input map file.
</LI>
<LI>yet faster 
<A HREF="./fac_synfast.htm#fac:synfast"><SPAN style="font-family:monospace">synfast</SPAN></A>,
<A HREF="./fac_anafast.htm#fac:anafast"><SPAN style="font-family:monospace">anafast</SPAN></A>,
<A HREF="./fac_smoothing.htm#fac:smoothing"><SPAN style="font-family:monospace">smoothing</SPAN></A> thanks to <A ID="tex2html190"
  HREF="https://sourceforge.net/projects/libsharp"><SPAN style="font-family:monospace">libsharp</SPAN></A>
routines (see <A HREF="#install:cpp:gccreleases">warning on
gcc releases above</A>).
</LI>
</UL>

<P>
<strong><A ID="tex2html133"
  HREF="idl.htm">IDL</A></strong>

<UL>
<LI>bug corrections: 
	<A HREF="./idl_query_disc.htm#idl:query_disc"><SPAN style="font-family:monospace">query_disc</SPAN></A>: correct handling of empty disc; 
	<A HREF="./idl_bin_llcl.htm#idl:bin_llcl"><SPAN style="font-family:monospace">bin_llcl</SPAN></A>: correct handling of optional argument.
</LI>
<LI>double precision of input now preserved in
	<A HREF="./idl_gaussbeam.htm#idl:gaussbeam"><SPAN style="font-family:monospace">gaussbeam</SPAN></A> and 
	<A HREF="./idl_euler_matrix_new.htm#idl:euler_matrix_new"><SPAN style="font-family:monospace">euler_matrix_new</SPAN></A>.
</LI>
<LI><A HREF="./idl_fits2cl.htm#idl:fits2cl"><SPAN style="font-family:monospace">fits2cl</SPAN></A>: addition of 
	<SPAN style="font-family:monospace">/PLANCK1</SPAN> keyword
	to read best fit <SPAN CLASS="MATH"><I>C</I>(<I>l</I>)</SPAN> model to Planck 2013 + external data.
</LI>
<LI>it is now possible to read a specific FITS file extension identified by its
	(0-based) number or its case-insensitive EXTNAME value with the <SPAN style="font-family:monospace">Extension</SPAN>
	keyword added to 
	<A HREF="./idl_fits2cl.htm#idl:fits2cl"><SPAN style="font-family:monospace">fits2cl</SPAN></A>,
	<A HREF="./idl_getsize_fits.htm#idl:getsize_fits"><SPAN style="font-family:monospace">getsize_fits</SPAN></A>,
	<A HREF="./idl_read_fits_map.htm#idl:read_fits_map"><SPAN style="font-family:monospace">read_fits_map</SPAN></A>,
	<A HREF="./idl_read_fits_s.htm#idl:read_fits_s"><SPAN style="font-family:monospace">read_fits_s</SPAN></A> and 
	<A HREF="./idl_read_tqu.htm#idl:read_tqu"><SPAN style="font-family:monospace">read_tqu</SPAN></A>.
</LI>
<LI>update of the required
	<A ID="tex2html191"
  HREF="https://idlastro.gsfc.nasa.gov/homepage.html"><SPAN style="font-family:monospace">IDL-astron</SPAN> library</A>
routines, and their supporting <A ID="tex2html192"
  HREF="http://www.idlcoyote.com"><SPAN style="font-family:monospace">Coyote</SPAN></A>
routines (2013-02-08).
</LI>
</UL>

<P>
<strong>Java</strong>
N/A<strong>Python</strong>

<UL>
<LI>switch to <SPAN style="font-family:monospace">healpy 1.5.0</SPAN>: addition of 
<A ID="tex2html193"
  HREF="https://healpy.readthedocs.io/en/1.5.0/generated/healpy.sphtfunc.gauss_beam.html"><SPAN style="font-family:monospace">gauss_beam</SPAN></A>
to generate Gaussian beam window function.
</LI>
</UL>

<P>
<strong>Bug corrections and Improvements in Version 3.0 (2012-11)</strong> 
<P>
<strong>General</strong>
Introduction of the script <SPAN style="font-family:monospace">healpix_doc</SPAN> for easy access to the <strong>HEALPix</strong> 
PDF and HTML documentation.

<P>
<strong><A ID="tex2html134"
  HREF="csub.htm">C</A></strong>

<UL>
<LI>Interface has remained unchanged, but the code has been replaced by a C port
of the relevant Healpix C++ functions, resulting in significant speedups.
</LI>
<LI>Additional functions are provided which support Nside values up to <SPAN CLASS="MATH">2<SUP>29</SUP></SPAN>.
They have the same name as the traditional functions, with a "64" suffix appended.
</LI>
</UL>

<P>
<strong>C++</strong>

<UL>
<LI>Query routines:
 <A ID="install:cpp:query"></A>query_polygon() and query_polygon_inclusive() added.
Query routines now return lists of pixel ranges instead of lists of pixels,
 which is much more economic.
Inclusive query routines: tradeoff between performance and number of false
 positives is tuneable.
Queries now work natively in both NESTED and RING schemes. Operations on
 the NESTED scheme are typically slower than in RING, but still much faster
 than computing the query in RING and converting all pixel numbers to NESTED
 afterwards.

<P>
</LI>
<LI>Healpix_Base:
Healpix_Base and Healpix_Base2 have been merged into the templated class
 T_Healpix_Base; functionality is still available under the old names.
Various performance improvements to T_Healpix_Base functionality

<P>
</LI>
<LI>User-friendliness:
module parameters can now optionally be passed on the command line instead
 of using a parameter file. For example:
<BR>   <SPAN style="font-family:monospace">anafast_cxx nlmax=500 infile=test.fits iter_order=3</SPAN> <!-- MATH
 $\langle\ldots\rangle$
 -->
<SPAN CLASS="MATH"><IMG
 STYLE="height: 2.33ex; vertical-align: -0.68ex; " SRC="installimg16.png"
 ALT="$\langle\ldots\rangle$"></SPAN>
<BR>
Facilities now check input maps for undefined pixels before calling map2alm().
 If undefined pixels are found, a warning is printed, and the pixels are set
 to zero. udgrade_cxx refuses downgrading of polarised maps (which would produce
 unphysical results)
</LI>
<LI>Bug fixes: accuracy of pix2ang near the poles at high resolutions has been improved.
</LI>
<LI>Configuration: optional autoconf support
</LI>
<LI>Interface changes:

<UL>
<LI>Healpix_Base::query_*(): new interface
</LI>
<LI>cxxutils.h has been split up into
 announce.h (dealing with module banners), 
 share_utils.h (dealing with subdividing tasks between multiple workers) and
 string_utils.h (dealing with string manipulation and file parsing)
</LI>
<LI>psht.h: interface to alm_info changed in order to add MPI support
</LI>
<LI>ylmgen_c.h: Ylmgen_init() interface has changed
</LI>
<LI>bluestein.h: bluestein_i() interface changed
</LI>
</UL>

<P>
</LI>
</UL>

<P>
<strong>Fortran 90 <A ID="tex2html135"
  HREF="facilities.htm">facilities</A>
and
<A ID="tex2html136"
  HREF="subroutines.htm">subroutines</A>
</strong>

<UL>
<LI>Compressed and/or remote (ftp or http) FITS files can now be
read. CFITSIO 3.14 or more is now required;
</LI>
<LI>introduction of the 
<A HREF="./fac_process_mask.htm#fac:process_mask"><SPAN style="font-family:monospace">process_mask</SPAN></A>
facility to compute the angular distance of valid
pixels to the closest invalid pixels for a input binary mask, and of the
supporting routines 
<A HREF="./sub_dist2holes_nest.htm#sub:dist2holes_nest"><SPAN style="font-family:monospace">dist2holes_nest</SPAN></A>, 
<A HREF="./sub_fill_holes_nest.htm#sub:fill_holes_nest"><SPAN style="font-family:monospace">fill_holes_nest</SPAN></A>, 
<A HREF="./sub_maskborder_nest.htm#sub:maskborder_nest"><SPAN style="font-family:monospace">maskborder_nest</SPAN></A>,
<A HREF="./sub_size_holes_nest.htm#sub:size_holes_nest">size_holes_nest</A>;
</LI>
<LI>the pixel query routine
 <A HREF="./sub_query_disc.htm#sub:query_disc"><SPAN style="font-family:monospace">query_disc</SPAN></A>
has been improved and will return fewer
false positive pixels in the 
inclusive mode;
</LI>
<LI>improved accuracy of the co-latitude calculation in the vicinity
of the poles at high resolution in 
<A HREF="./sub_pix2xxx_ang2xxx_vec2xxx_nes.htm#sub:pix_tools"><SPAN style="font-family:monospace">nest2ring, ring2nest, pix2ang_*, pix2vec_*, <SPAN CLASS="MATH"><IMG
 STYLE="height: 0.23ex; vertical-align: -0.10ex; " SRC="installimg4.png"
 ALT="$\ldots$"></SPAN></SPAN></A>;
</LI>
<LI><A HREF="./fac_sky_ng_sim.htm#fac:sky_ng_sim"><SPAN style="font-family:monospace">sky_ng_sim</SPAN></A> now allows the computation
of the spatial derivatives of the non Gaussian map being produced, and the
output of the <SPAN CLASS="MATH"><IMG
 STYLE="height: 1.46ex; vertical-align: -0.45ex; " SRC="installimg13.png"
 ALT="$a_{\ell m}$"></SPAN> coefficients of that map;
</LI>
<LI><A HREF="./fac_anafast.htm#fac:anafast"><SPAN style="font-family:monospace">anafast</SPAN></A> now allows the
pro/down-grading of the input mask to match the resolution of the map(s) being
analyzed;
</LI>
<LI>the median filter routine <A HREF="./sub_medfiltmap.htm#sub:medfiltmap"><SPAN style="font-family:monospace">medfiltmap</SPAN></A>, used by the facility
<A HREF="./fac_median_filter.htm#fac:median_filter"><SPAN style="font-family:monospace">median_filter</SPAN></A> is now parallelized.
</LI>
</UL>

<P>
<strong><A ID="tex2html137"
  HREF="idl.htm">IDL</A></strong>

<UL>
<LI>New routines to go from circular beam profile to transfer function
(<A HREF="./idl_beam2bl.htm#idl:beam2bl"><SPAN style="font-family:monospace">beam2bl</SPAN></A>), 
and back (<A HREF="./idl_bl2beam.htm#idl:bl2beam"><SPAN style="font-family:monospace">bl2beam</SPAN></A>); 
to go from indexed list of <SPAN CLASS="MATH"><IMG
 STYLE="height: 1.46ex; vertical-align: -0.45ex; " SRC="installimg13.png"
 ALT="$a_{\ell m}$"></SPAN> to a(l,m) 2D table
(<A HREF="./idl_alm_i2t.htm#idl:alm_i2t"><SPAN style="font-family:monospace">alm_i2t</SPAN></A>), 
and back
(<A HREF="./idl_alm_t2i.htm#idl:alm_t2i"><SPAN style="font-family:monospace">alm_t2i</SPAN></A>); and to compute the angular distance
between pairs of vectors (<A HREF="./idl_angulardistance.htm#idl:angulardistance"><SPAN style="font-family:monospace">angulardistance</SPAN></A>).
</LI>
<LI>addition of <A HREF="./idl_iprocess_mask.htm#idl:iprocess_mask"><SPAN style="font-family:monospace">iprocess_mask</SPAN></A>
interface to F90 <SPAN style="font-family:monospace">process_mask</SPAN> facility to compute the angular distance of valid
pixels to the closest invalid pixels for a input binary mask.
</LI>
<LI>creation of <A HREF="./idl_hpx2dm.htm#idl:hpx2dm"><SPAN style="font-family:monospace">hpx2dm</SPAN></A> routine to generate
DomeMaster images of <strong>HEALPix</strong> maps that can be projected on planetariums.
</LI>
<LI>the pixel query routines 
<A HREF="./idl_query_triangle.htm#idl:query_triangle"><SPAN style="font-family:monospace">query_triangle</SPAN></A>, 
<A HREF="./idl_query_polygon.htm#idl:query_polygon"><SPAN style="font-family:monospace">query_polygon</SPAN></A>, 
and in particular <A HREF="./idl_query_disc.htm#idl:query_disc"><SPAN style="font-family:monospace">query_disc</SPAN></A>, 
have been improved and will return fewer
false positive pixels in the <EM>inclusive</EM> mode
</LI>
<LI>improved accuracy of the co-latitude calculation in the vicinity
of the poles at high resolution in 
<A HREF="./idl_pix2xxx_ang2xxx_vec2xxx_nes.htm#idl:pix_tools"><SPAN style="font-family:monospace">nest2ring, ring2nest, pix2ang_*, pix2vec_*, <SPAN CLASS="MATH"><IMG
 STYLE="height: 0.23ex; vertical-align: -0.10ex; " SRC="installimg4.png"
 ALT="$\ldots$"></SPAN></SPAN></A>
</LI>
<LI><A HREF="./idl_mollview.htm#idl:mollview"><SPAN style="font-family:monospace">cartview, gnomview, mollview, orthview</SPAN></A>:
 the length and spacing of the headless vectors used to represent
polarization is now user-controlled  via 
<SPAN style="font-family:monospace">POLARIZATION</SPAN>
keyword. The <SPAN style="font-family:monospace">COLT</SPAN> keyword now
allows the use of an interactively modified color table.
</LI>
<LI><A HREF="./idl_orthview.htm#idl:orthview"><SPAN style="font-family:monospace">orthview</SPAN></A> now accepts
<SPAN style="font-family:monospace">STAGGER</SPAN> keyword to overplot staggered
spheres (with a twist) in order to detect periodic boundary conditions on the
sky
</LI>
<LI><A HREF="./idl_fits2cl.htm#idl:fits2cl"><SPAN style="font-family:monospace">fits2cl</SPAN></A>: addition of <SPAN style="font-family:monospace">WMAP7</SPAN> keyword
to read best fit <SPAN CLASS="MATH"><I>C</I>(<I>l</I>)</SPAN> model to WMAP 7yr data.
</LI>
<LI><A HREF="./idl_read_fits_map.htm#idl:read_fits_map"><SPAN style="font-family:monospace">read_fits_map</SPAN></A> can now read
<!-- MATH
 $N_{\mathrm{side}}$
 -->
<SPAN CLASS="MATH"><I>N</I><SUB>side</SUB></SPAN>=8192 <strong>HEALPix</strong> maps and is generally faster than previously for smaller
maps
</LI>
<LI>update of <SPAN style="font-family:monospace">astron</SPAN> library routines (01-Feb-2012).
</LI>
</UL>

<P>
<strong>Java</strong>

<UL>
<LI>Core functionality has been reimplemented from scratch in the form of the
"healpix.essentials" package. It is strongly recommended to use this package
directly in future projects making use of Java <strong>HEALPix</strong>.
"healpix.essentials" is a port of the Healpix C++ library and presents a very
similar interface.

<P>
The "healpix.core" package is still provided. It uses "healpix.essentials"
internally, and its interface has been kept stable as much as possible.
Some adaptations in user code will still be necessary, however.
Please note that using "healpix.core" will result in slightly lower performance
than calling "healpix.essentials" methods directly, because of the necessary
data conversion.
</LI>
<LI>New features and improvements introduced with the HealpixBase class, compared
to the HealpixIndex, Healpix and PixTools classes:

<UL>
<LI>close similarities with Healpix_Base_T class from Healpix C++, which allows
 simultaneous development and bug fixes for both.
</LI>
<LI>support for arbitrary positive Nside values in RING scheme; no longer limited
 to powers of 2
</LI>
<LI>maximum supported Nside value: <SPAN CLASS="MATH">2<SUP>29</SUP></SPAN>
</LI>
<LI>significant performance improvements: most methods have been accelerated
 by integral factors, some by more than an order of magnitude.
</LI>
<LI>re-implementation of queryDisc and queryPolygon, with same new features
as the C++ implementation (see <A HREF="#install:cpp:query">above</A>).
</LI>
<LI>the HealpixProc class offers a procedural (instead of object-oriented)
 interface to the HealpixBase functionality, which simplifies transition
 for users of the "Healpix" and "PixTools" classes.
 NOTE: this only works for Nside parameters which are powers of 2
</LI>
<LI>many bug fixes
</LI>
<LI>no external library dependencies, except for "nom.tam.fits" if FITS I/O is
 required
</LI>
</UL>
</LI>
</UL>

<P>
<strong>Python</strong>

<UL>
<LI>the 
<A ID="tex2html194"
  HREF="https://github.com/healpy/healpy"><SPAN style="font-family:monospace">healpy</SPAN></A>
package (C. Rosset, A. Zonca et al.) is now part of <strong>HEALPix</strong> 
</LI>
</UL>

<P>
 
<P>

<P>

<P>

<H1><A ID="SECTION1100">
About this document ...</A>
</H1>
 <STRONG><strong>HEALPix</strong> Facility Installation Guidelines</STRONG><P>
This document was generated using the
<A HREF="http://www.latex2html.org/">LaTeX2HTML</A> translator Version 2020 (Released January 1, 2020)
<P>
The command line arguments were: <BR>
 <kbd>latex2html -dir ../../healpix-dynamicPages/html -up_url main.htm -up_title 'Main Page' -down_url main.htm -down_title 'Main Page' -math -html_version 5.0,latin1 -antialias -bottom_navigation -short_extn -white -local_icons -noexternal_images -address 'Version 3.80, 2021-06-22' -info 1 -toc_depth 8 -split 3 -prefix install -external_file ./install -t 'Installing HEALPix' install</kbd>
<P>
The translation was initiated on 2021-06-22
<BR><HR>
<!--Table of Child-Links-->
<A ID="CHILD_LINKS"></A>

<UL CLASS="ChildLinks">
<LI><A ID="tex2html195"
  HREF="install.htm#SECTION100">TABLE OF CONTENTS</A>
<LI><A ID="tex2html196"
  HREF="install.htm#SECTION200">Introduction</A>
<LI><A ID="tex2html197"
  HREF="install.htm#SECTION300">Installation Requirements</A>
<LI><A ID="tex2html198"
  HREF="install.htm#SECTION400"><SPAN  CLASS="texttt">healpix_doc</SPAN>: an easy access to <strong>HEALPix</strong> documentation</A>
<LI><A ID="tex2html199"
  HREF="install.htm#SECTION500">The Installation Procedure</A>
<UL>
<LI><A ID="tex2html200"
  HREF="install.htm#SECTION510">./configure [-L] [&mdash;auto=&lt;list&gt;] [-h] [-v]</A>
<UL>
<LI><A ID="tex2html201"
  HREF="install.htm#SECTION511">Configuration profile</A>
<LI><A ID="tex2html202"
  HREF="install.htm#SECTION512">C configuration</A>
<LI><A ID="tex2html203"
  HREF="install.htm#SECTION513">C++ configuration</A>
<LI><A ID="tex2html204"
  HREF="install.htm#SECTION514">Fortran 90 configuration</A>
<LI><A ID="tex2html205"
  HREF="install.htm#SECTION515">IDL/GDL/FL configuration</A>
<LI><A ID="tex2html206"
  HREF="install.htm#SECTION516">Java installation</A>
<LI><A ID="tex2html207"
  HREF="install.htm#SECTION517">Python (healpy) installation</A>
<LI><A ID="tex2html208"
  HREF="install.htm#SECTION518">libsharp library</A>
</UL>
<LI><A ID="tex2html209"
  HREF="install.htm#SECTION520">Compilation and installation</A>
<LI><A ID="tex2html210"
  HREF="install.htm#SECTION530">Testing the installation</A>
<LI><A ID="tex2html211"
  HREF="install.htm#SECTION540">Cleaning up</A>
<LI><A ID="tex2html212"
  HREF="install.htm#SECTION550">Linking a code with <strong>HEALPix</strong> library</A>
</UL>
<BR>
<LI><A ID="tex2html213"
  HREF="install.htm#SECTION600">A Note on <I>Re</I>-installation</A>
<LI><A ID="tex2html214"
  HREF="install.htm#SECTION700">Pkg-config files</A>
<LI><A ID="tex2html215"
  HREF="install.htm#SECTION800">Troubleshooting and further information</A>
<UL>
<LI><A ID="tex2html216"
  HREF="install.htm#SECTION810">Free Fortran90/95 Compilers</A>
<LI><A ID="tex2html217"
  HREF="install.htm#SECTION820">Installation under Microsoft Windows</A>
<UL>
<LI><A ID="tex2html218"
  HREF="install.htm#SECTION821">Installation on Windows 7 with Cygwin</A>
<LI><A ID="tex2html219"
  HREF="install.htm#SECTION822">Other Windows configurations</A>
</UL>
<LI><A ID="tex2html220"
  HREF="install.htm#SECTION830">Problems with CFITSIO</A>
<UL>
<LI><A ID="tex2html221"
  HREF="install.htm#SECTION831">Compilation of CFITSIO Fortran wrappers</A>
<LI><A ID="tex2html222"
  HREF="install.htm#SECTION832">CFITSIO problems on systems with 64 bit architecture</A>
<LI><A ID="tex2html223"
  HREF="install.htm#SECTION833">CFITSIO linking problems</A>
<LI><A ID="tex2html224"
  HREF="install.htm#SECTION834">CFITSIO and Debian/Linux</A>
<LI><A ID="tex2html225"
  HREF="install.htm#SECTION835">CFITSIO and <SPAN  CLASS="texttt">libcurl</SPAN></A>
<LI><A ID="tex2html226"
  HREF="install.htm#SECTION836">CFITSIO from Heasoft</A>
</UL>
<LI><A ID="tex2html227"
  HREF="install.htm#SECTION840"><SPAN  CLASS="texttt">diff</SPAN> shows that the test files are different from
the supplied files</A>
<LI><A ID="tex2html228"
  HREF="install.htm#SECTION850">Try <SPAN  CLASS="texttt">unlimit</SPAN></A>
<LI><A ID="tex2html229"
  HREF="install.htm#SECTION860"><SPAN  CLASS="texttt">hidl</SPAN> usage</A>
<LI><A ID="tex2html230"
  HREF="install.htm#SECTION870">Using <strong>HEALPix</strong> IDL together with other IDL libraries</A>
<LI><A ID="tex2html231"
  HREF="install.htm#SECTION880">Mac OS X,  X11 and IDL cursor</A>
<LI><A ID="tex2html232"
  HREF="install.htm#SECTION890">Using GDL instead of IDL</A>
<UL>
<LI><A ID="tex2html233"
  HREF="install.htm#SECTION891">GDL+<strong>HEALPix</strong> specific requirements</A>
<LI><A ID="tex2html234"
  HREF="install.htm#SECTION892">Impact of GDL limitations on <strong>HEALPix</strong> </A>
</UL>
<LI><A ID="tex2html235"
  HREF="install.htm#SECTION8100">Using FL instead of IDL</A>
<UL>
<LI><A ID="tex2html236"
  HREF="install.htm#SECTION8101">FL+<strong>HEALPix</strong> specific requirements</A>
<LI><A ID="tex2html237"
  HREF="install.htm#SECTION8102">Impact of FL limitations on <strong>HEALPix</strong> </A>
</UL>
</UL>
<BR>
<LI><A ID="tex2html238"
  HREF="install.htm#SECTION900">Appendix I: Recent Changes and New Features</A>
<UL>
<LI><A ID="tex2html239"
  HREF="install.htm#SECTION910">Bug corrections and Improvements in Version 3.80</A>
<UL>
<LI><A ID="tex2html240"
  HREF="install.htm#SECTION911">General</A>
<LI><A ID="tex2html241"
  HREF="install.htm#SECTION912">C++</A>
<LI><A ID="tex2html242"
  HREF="install.htm#SECTION913">Fortran 90</A>
<LI><A ID="tex2html243"
  HREF="install.htm#SECTION914">IDL</A>
<LI><A ID="tex2html244"
  HREF="install.htm#SECTION915">Python</A>
</UL>
</UL>
<BR>
<LI><A ID="tex2html245"
  HREF="install.htm#SECTION1000">Appendix II: Older changes (versions 3.00 to 3.70)</A>
<LI><A ID="tex2html246"
  HREF="install.htm#SECTION1100">About this document ...</A>
</UL>
<!--End of Table of Child-Links-->

<DIV CLASS="navigation"><HR>
<!--Navigation Panel-->
<IMG WIDTH="63" HEIGHT="24" ALT="previous" SRC="prev_g.png"> 
<A
 HREF="main.htm">
<IMG WIDTH="26" HEIGHT="24" ALT="up" SRC="up.png"></A> 
<A
 HREF="main.htm">
<IMG WIDTH="37" HEIGHT="24" ALT="next" SRC="nx_grp.png"></A>   
<BR>
<strong>Up:</strong> <A
 HREF="main.htm">Main Page</A>

<strong> Next:</strong> <A
 HREF="main.htm">Main Page</A>
<strong> Top:</strong> <a href="main.htm">Main Page</a></DIV>
<!--End of Navigation Panel-->
<ADDRESS>
Version 3.80, 2021-06-22
</ADDRESS>
</BODY>
</HTML>
